//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Eric Ou
//	Sounds:		Id Software
//  Sprites: 	Id Software (edits by Eric Ou)
//	GLDEFs: 	n/a
//======================================================================
//  Additional credits
//======================================================================
//	ZScript:	Dutchygamer
//	Sounds:		Westwood Studios
//======================================================================

class Draugr : DMR_Revenant
{
	Default
	{
		Tag "Draugr";
		Health 650;
		Obituary "%o got incinerated by a draugr's flamethrower.";
		HitObituary "%o was beaten to death by a draugr.";
		SeeSound "skeleton/sight";
		PainSound "skeleton/pain";
		DeathSound "skeleton/death";
		ActiveSound "skeleton/active";
		MeleeSound "skeleton/melee";
		Speed 8;
		Painchance 80;
		MeleeThreshold 0;
	}
	int attackloop;
	
	States 
	{ 
	Spawn:
		SKE2 AB 10 A_Look;
		Loop;
	See:    
		SKE2 AABBCCDDEEFF 2 A_Chase;
		Loop;
	Melee:
		TNT1 A 0 A_Jump(128, "Flamethrower"); //chance to use flamethrower for melee
		SKE2 J 0 A_FaceTarget;
		SKE2 J 6 A_SkelWhoosh;
		SKE2 K 6 A_FaceTarget;
		SKE2 L 6 A_CustomMeleeAttack(random(12,36),"skeleton/melee");
		Goto See;
	Missile:
		TNT1 A 0 A_Jump(256, "ClusterRocket", "Flamethrower");
		Goto See;
	BigRocket:
		SKE2 G 10 A_FaceTarget;
		SKE2 H 5 Bright A_SpawnProjectile("DraugrTracer", 64, -14);
		SKE2 I 15 A_FaceTarget;
		Goto See;
	ClusterRocket:
		TNT1 A 0 {
			// cluster missiles suck at close range, so use normal rocket instead
			if(target && Distance3D(target) < 300) SetStateLabel("BigRocket");
		}
		SKE2 G 15 Bright A_FaceTarget;
		SKE2 H 5 Bright A_SpawnProjectile("DraugrClusterMissile", 64, -14);
		SKE2 I 15 A_FaceTarget;
		Goto See;
	Flamethrower:
		TNT1 A 0 {
			if(target && Distance3D(target) > 300) SetStateLabel("BigRocket");
		}
		SKE2 GG 10 Bright A_FaceTarget;
		TNT1 A 0 { attackloop = 0; }
		TNT1 A 0 Bright A_PlaySound ("weapons/flamethrower");		
	FlamethrowerLoop:
		TNT1 A 0 A_JumpIf(attackloop >= 12,"FlamethrowerEnd");
		SKE2 H 1 Bright {
			A_FaceTarget();
			attackloop++;
			A_SpawnProjectile("DMR_FlamethrowerBall", 64, -14, random(-3,3));
		}
		Loop;
	FlamethrowerEnd:
		SKE2 G 8 A_FaceTarget;
		Goto See;
	Pain:
		SKE2 M 5;
		SKE2 M 5 A_Pain;
		Goto See;
	Death:
	XDeath:
		SKE2 N 7;
		SKE2 O 7 A_Scream;
		SKE2 P 7 A_NoBlocking;
		SKE2 QR 7;
		SKE2 S -1;
		Stop;
	Raise:
		SKE2 SRQPON 5;
		Goto See;
	} 
}

class DraugrTracer : DMR_RevenantTracer
{
	Default
	{
		DamageFunction(random(16,48));
		Obituary "%o ate a draugr's missile.";
		RenderStyle "Normal";
	}
	States
	{
	Spawn:
		FBRS A 1 Bright {
			// 16.875 should be the same value as the vDoom Revenant fireball homing thingmajing
			// however, we need to divide that by 2 again to encount for the 50/50 chance of homing or not
			A_SeekerMissile(1,8,SMF_PRECISE);
			A_SpawnItemEx("DMR_MediumFireballTrail",-18,0,2,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_MediumSmokeCloud",-18,0,2,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
		}
		Loop;
	Death:
		TNT1 AAAA 0 {
			A_SpawnItemEx("DMR_FireBouncingDebris",random(-2,2),random(-2,2),random(-2,2),frandom(-8,8),frandom(-8,8),frandom(-2,8)); 
		}
		MISL B 8 Bright A_Explode(48, 48);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

//homing missile that breaks up in partially homing clusters near its target
class DraugrClusterMissile : DMR_RevenantTracer
{
	Default
	{
		DamageFunction(random(10,30));
		Obituary "%o couldn't dodge a draugr's clustermissile.";
		RenderStyle "Normal";
		Scale 0.8;
	}
	States
	{
	Spawn:
		HMIS A 1 Bright {
			// 16.875 should be the same value as the vDoom Revenant fireball homing thingmajing
			// however, we need to divide that by 2 again to encount for the 50/50 chance of homing or not
			A_SeekerMissile(1,8,SMF_PRECISE);
			A_SpawnItemEx("DMR_MediumFireballTrail",-18,0,2,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_MediumSmokeCloud",-18,0,2,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
		}
		HMIS A 0 A_JumpIfTracerCloser(120, "Death");
		Loop;
	Death:
		TNT1 AAA 0 {
			A_SpawnItemEx("DMR_FireBouncingDebris",random(-2,2),random(-2,2),random(-2,2),frandom(-8,8),frandom(-8,8),frandom(-2,8)); 
		}
		TNT1 A 0 {
			A_Stop();
			//split up in subprojectiles, which can randomly home in or not
			A_SpawnProjectile("DraugrSubProjectile", 0, 0, 0+random(0,370));
			A_SpawnProjectile("DraugrSubProjectile", 0, 0, 0+random(0,370));
			A_SpawnProjectile("DraugrSubProjectile", 0, 0, 0+random(0,370));
		}
		MISL B 8 Bright A_Explode(10, 48);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

//exactly the same as DMR_ClusterSubProjectile, seperately so we can apply the custom damagetype in the Guncaster patch
class DraugrSubProjectile : DMR_ClusterSubProjectile 
{ 
	Default
	{
		Obituary "%o couldn't dodge a draugr's clustermissile.";	
	}
}