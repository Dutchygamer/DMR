//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Eric Ou
//	Sounds:		Id Software
//  Sprites: 	Id Software (edits by Eric Ou)
//	GLDEFs: 	n/a
//======================================================================
//  Additional credits
//======================================================================
//	ZScript:	Dutchygamer
//	Sounds:		Westwood Studios
//======================================================================

class Draugr : DMR_Revenant
{
	Default
	{
		Tag "Draugr";
		Health 650;
		Obituary "%o got blasted by a draugr.";
		HitObituary "%o was beaten to death by a draugr.";
		SeeSound "skeleton/sight";
		PainSound "skeleton/pain";
		DeathSound "skeleton/death";
		ActiveSound "skeleton/active";
		MeleeSound "skeleton/melee";
		PainChance 70;
		+MISSILEMORE;
	}
	
	States 
	{ 
	Spawn:
		SKE2 AB 10 A_Look;
		Loop;
	See:    
		SKE2 AABBCCDDEEFF 2 A_Chase;
		Loop;
	Melee:
		SKE2 J 0 A_FaceTarget;
		SKE2 J 6 A_SkelWhoosh;
		SKE2 K 6 A_FaceTarget;
		SKE2 L 6 A_CustomMeleeAttack(random(16,48),"skeleton/melee");
		TNT1 A 0 {
			// toast your target if still within range
			if (target && Distance3D(target) < 180) SetStateLabel("Flamethrower");
		}
		Goto See;
	Missile:
		TNT1 A 0 A_Jump(128,"ClusterRocket","Flamethrower");
		Goto See;
	HERocket:
		SKE2 GG 6 Bright {
			targetLock = false;
			A_FaceTarget();
		}
		SKE2 G 6 {
			if (target && CheckSight(target)) {
				targetLock = true;
			}
			A_FaceTarget();
		}
		SKE2 H 8 Bright Light("DMR_RifleFire") {
			if (targetLock) { A_SpawnProjectile("DraugrHomingTracer",64,-14); }
			else { A_SpawnProjectile("DraugrTracer",64,-14); }
		}
		SKE2 I 10;
		Goto See;
	ClusterRocket:
		TNT1 A 0 {
			// cluster missiles suck at close range, so use normal rocket instead
			if (target && Distance3D(target) < 300) SetStateLabel("HERocket");
		}
		SKE2 GG 7 Bright A_FaceTarget;
		SKE2 H 8 Bright Light("DMR_RifleFire") A_SpawnProjectile("DraugrClusterMissile",64,-14);
		SKE2 I 10;
		Goto See;
	Flamethrower:
		TNT1 A 0 {
			if (target && Distance3D(target) > 300) SetStateLabel("HERocket");
		}
		SKE2 GG 7 Bright A_FaceTarget;
		TNT1 A 0 { 
			attackloop = 0; 
			A_StartSound("flamethrower/fire", CHAN_WEAPON);
		}
	FlamethrowerLoop:
		TNT1 A 0 A_JumpIf(attackloop >= 24,"FlamethrowerEnd");
		SKE2 H 1 Bright Light("DMR_RifleFire") {
			A_FaceTarget();
			attackloop++;
			A_SpawnProjectile("DMR_FlamethrowerBall",64,-14,random(-3,3));
		}
		Loop;
	FlamethrowerEnd:
		SKE2 G 8 A_FaceTarget;
		Goto See;
	Pain:
		SKE2 M 5;
		SKE2 M 5 A_Pain;
		Goto See;
	Death:
		SKE2 N 7;
		SKE2 O 7 A_Scream;
		SKE2 P 7 A_NoBlocking;
		SKE2 QR 7;
		SKE2 S -1;
		Stop;
	XDeath: //temp for now
		SKEL R 5;
		SKEL S 5 A_XScream;
		SKEL T 5 A_NoBlocking;
		SKEL UVWX 5;
		SKEL Y -1;
		stop;
	Raise:
		SKE2 SRQPON 5;
		Goto See;
	} 
}

class DraugrTracer : DMR_SmallRocket
{
	Default
	{
		DamageFunction(random(16,48));
		Speed 20;
	}
	States
	{
	Spawn:
		FBRS A 1 Bright {
			A_SpawnItemEx("DMR_FireballTrail",-30,0,1,frandom(-1,0),frandom(-1,1),frandom(-1,0));
			A_SpawnItemEx("DMR_SmokeCloud",-30,0,1,frandom(-1,0));
			for (fxLoop = 0;fxLoop<=2;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(8,10),0,frandom(-30,-26),frandom(-6,6),frandom(-5,5),frandom(-1,1),0,frandom(-1,1),0,0,-0.05,1,-1,-0.5);
			}
		}
		Loop;
	Death:
		TNT1 A 0 {
			A_SetRenderStyle(1.0,STYLE_Add);
			A_SpawnItemEx("DMR_MediumFireballImpactSpawner");
			A_QuakeEx(3,3,3,15,0,600,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,falloff:400,rollIntensity:.75);
			for (fxLoop = 0;fxLoop<=50;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(18,24),frandom(12,14),random(0,360),frandom(0,9),0,frandom(-7,7),frandom(0,7),0,frandom(-7,7),0,0,-0.1,1,-1,-0.6);
			}
			A_Explode(48, 48);
		}
		XPL2 ABCDEF 1 Bright Light("DMR_Rocket_X1");
		XPL2 GHIJKL 1 Bright Light("DMR_Rocket_X2");
		XPL2 MNOPQ 1 Bright Light("DMR_Rocket_X3") A_FadeOut(0.15);
		Stop;
	}
}

class DraugrHomingTracer : DraugrTracer
{
	Default
	{
		Speed 10;
		+SEEKERMISSILE;
		Scale 1.0;
	}
	States
	{
	Spawn:
		FBRS A 1 Bright {
			A_SeekerMissile(1,5,SMF_PRECISE|SMF_CURSPEED);
			A_SpawnItemEx("DMR_FireballTrail",-28,0,3,frandom(-1,0),frandom(-1,1),frandom(-1,0));
			A_SpawnItemEx("DMR_SmokeCloud",-28,0,3,frandom(-1,0));
			for (fxLoop = 0;fxLoop<=2;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(8,10),0,frandom(-30,-26),frandom(-6,6),frandom(-5,5),frandom(-1,1),0,frandom(-1,1),0,0,-0.05,1,-1,-0.5);
			}
		}
		Loop;
	}
}

// homing missile that breaks up in partially homing clusters near its target
class DraugrClusterMissile : CoreDefenderClusterMissile
{
	Default
	{
		Speed 10;
		Scale 0.8;
		SeeSound "draugr/clustermissile/launch";
		Decal "Scorch";
	}
	States
	{
	Spawn:
		HMIS A 1 Bright {
			A_SeekerMissile(1,8,SMF_PRECISE);
			A_SpawnItemEx("DMR_FireballTrail",-28,0,2,frandom(-1,0),frandom(-1,1),frandom(-1,0));
			A_SpawnItemEx("DMR_SmokeCloud",-28,0,2,frandom(-1,0));
			for (fxLoop = 0;fxLoop<=2;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(8,10),0,frandom(-30,-26),frandom(-6,6),frandom(-5,5),frandom(-1,1),0,frandom(-1,1),0,0,-0.05,1,-1,-0.5);
			}
		}
		TNT1 A 0 A_JumpIfTracerCloser(150, "Cluster");
		Loop;
	Cluster:
		TNT1 A 0 {
			clustered = true;
			A_StartSound("smallrocket/launch",1,CHANF_OVERLAP);
			A_StartSound("coredefender/clustermissile/cluster",1,CHANF_OVERLAP);
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,random(-5,-10),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,0,CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,random(5,10),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
		}
	Death:
		TNT1 A 0 {
			A_Stop();
			A_SetRenderStyle(1.0,STYLE_Add);	
			A_SetScale(0.65);
			// only play large explosion sfx when not clustered
			if (!clustered) {
				A_StartSound("largerocket/explode",2);
			}
			A_SpawnItemEx("DMR_MediumFireballImpactSpawner");
			A_QuakeEx(1,1,1,12,0,300,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,falloff:100,rollIntensity:.5);
			for (fxLoop = 0;fxLoop<=50;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(18,24),frandom(12,14),random(0,360),frandom(0,9),0,frandom(-7,7),frandom(0,7),0,frandom(-7,7),0,0,-0.1,1,-1,-0.6);
			}
			A_Explode(10,48);
		}
		XPL2 ABCDEF 1 Bright Light("DMR_Rocket_X1");
		XPL2 GHIJKL 1 Bright Light("DMR_Rocket_X2");
		XPL2 MNOPQ 1 Bright Light("DMR_Rocket_X3") A_FadeOut(0.15);
		Stop;
	}
}