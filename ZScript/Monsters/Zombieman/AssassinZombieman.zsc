//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Tormentor667
//	Sounds:		Id Software, Rogue Entertainment
//  Sprites: 	Id Software, Raven Software (edits by Tormentor667 and NeoWorm)
//	GLDEFs: 	Ghastly Dragon, Sandypaper (Brightmaps)
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios
//	ZScript:	Dutchygamer
//======================================================================

class FormerInfiltrator : DMR_Zombieman
{
	Default
	{
		Tag "Former Infiltrator";
		OBITUARY "%o was taken out by a Former Infiltrator.";
		Health 45;
		Speed 12;
		PainChance 185;
		DamageFactor "ToxinCloud", 0.0; // immune to gas clouds
		+MISSILEMORE
		+NODROPOFF; // don't yeet yourself off platforms
		+DOHARMSPECIES; // zombies aren't grenade-proof
		DropItem "Clip";
		DropItem "Clip", 128;
	}
	bool isStealthed;
	
 	States
	{
	Spawn:
		ZHRT AB 10 A_Look;
		Loop;
	See:
		ZHRT AABBCCDD 4 A_Chase;
		TNT1 A 0 A_Jump(64,"GoStealthed");
		Loop;
    StealthedSee:
        ZHRT AABBCCDD 2 {
			A_Chase(null,null);			
			A_SpawnItemEx("InfiltratorAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
        ZHRT AABBCCDD 2 {
			A_Chase(null,null, CHF_FASTCHASE);			
			A_SpawnItemEx("InfiltratorAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
    StealthedSeeLoop:
        ZHRT AABBCCDD 2 {
			A_Chase();			
			A_SpawnItemEx("InfiltratorAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
        Loop;
	Missile:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		TNT1 A 0 A_JumpIfCloser(512, "MissileClose"); // only throw grenades when we are close
		Goto Rifle;
	MissileClose:
		TNT1 A 0 A_Jump(64, "Grenades");
		Goto Rifle;
	GoStealthed:
		TNT1 A 0 {
			if (isStealthed) { SetStateLabel("See"); }
		}
		ZHRT E 5 {
			isStealthed = true;
			A_StartSound("Infiltrator/stealth");
		}
		ZHRT EEEEE 1 { // to 0.0 alpha in total		
			//A_SpawnItemEx("DMR_SubtractAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION);
			A_SetRenderStyle(Alpha-0.2,STYLE_Translucent);
		}
		TNT1 A 0 A_Chase(null,null, CHF_FASTCHASE);
        Goto StealthedSee;
	Rifle:
		ZHRT E 10 A_FaceTarget;		
		ZHRT F 4 BRIGHT Light("DMR_RifleFire") {
			A_StartSound("Infiltrator/fire", CHAN_WEAPON);
			A_CustomBulletAttack(22.5,0,1,random(6,12),"BulletPuff",0,CBAF_NORANDOM);
		}
		ZHRT E 4;
		Goto See;
	Grenades:
		TNT1 A 0 A_JumpIfCloser(96, "Rifle"); // don't grenade yourself when standing in front of the target
		TNT1 A 0 {
			A_StartSound("handgrenade/prime", CHAN_WEAPON);
		}
		ZHRT EEE 8 A_FaceTarget;
		ZHRT F 5 {
			A_StartSound("handgrenade/throw", CHAN_WEAPON);
			A_SpawnProjectile("InfiltratorZombiemanGrenade",32,0,random(9,-9),CMF_OFFSETPITCH,random(-2,2));
		}
		ZHRT E 4;
		Goto See;
	Pain:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZHRT G 3;
		ZHRT G 3 A_Pain;
		Goto See;
	Death:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZHRT H 5;
		ZHRT I 5 A_Scream;
		ZHRT J 5 A_NoBlocking;
		ZHRT K 5;
		ZHRT L -1;
		Stop;
	XDeath:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZHRT O 5;
		ZHRT P 5 A_XScream;
		ZHRT Q 5 A_NoBlocking;
		ZHRT RTUV 5;
		ZHRT W -1;
		Stop;
	Raise:
		ZHRT KJIH 5;
		Goto See;
	}
}

class InfiltratorZombiemanGrenade : DMR_ThrownGrenade
{
	Default
	{
		DMR_Projectile.ParticleColors "#00d423", "#19ed3c", "#a9ffb7", "#b8ffc4";
	}
	States
	{
	Spawn:
		THR2 A 4;
		THR2 B 1 Bright;
		Loop;
	Death:
		TNT1 A 0 {
			bNoGravity = true;
			A_Stop();
			A_SetRenderStyle(1.0,STYLE_Add);
			A_SetScale(2.5);
			A_StartSound("gas/explode");	
			A_SpawnItemEx("DMR_GasBallImpactSpawner");
			for (fxLoop = 0;fxLoop<=30;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(12,14),random(0,360),frandom(0,6),0,frandom(-4,4),frandom(0,6),0,frandom(-6,6),0,0,-0.1,1,-1,-0.6);
			}
		}	
		FVUL C 4 {
			A_Explode(10,48);
			A_SpawnItemEx("DMR_MediumGasCloud",0,0,5,frandom(-1,1),frandom(-1,1),0,0,SXF_ORIGINATOR);
			A_SpawnItemEx("DMR_SmallGasCloud",0,0,5,frandom(-1,1),frandom(-1,1),0,0,SXF_ORIGINATOR);
			A_SpawnItemEx("DMR_SmallGasCloud",0,0,5,frandom(-1,1),frandom(-1,1),0,0,SXF_ORIGINATOR);
		}
		FVUL DEF 4;
		Stop;
	}
}


class InfiltratorAfterImage : DMR_SubtractAfterImage
{   
	Default
	{
		Alpha 0.1;
	}
}
