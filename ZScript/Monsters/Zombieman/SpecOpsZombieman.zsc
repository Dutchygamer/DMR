//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Graf Zahl
//	Sounds:		Id Software
//  Sprites: 	Id Software (edits by Xim, Vegeta, Ghastly_dragon, MagicWazard)
//	GLDEFs: 	Ghastly_dragon, MagicWazard (brightmaps)
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios, EA Games
//	ZScript:	Dutchygamer
//======================================================================

class FormerSpecOpsGunner : DMR_Zombieman
{
	Default
	{
		Tag "Former SpecOps Gunner";
		OBITUARY "%o was gunned down by a Former SpecOps Gunner.";
		Health 90;
		Speed 12;
		PainChance 80;
		DamageFactor "ZombieGrenade", 0.5; // take less damage from own grenades
		+MISSILEMORE
		+DOHARMSPECIES; // zombies aren't grenade-proof
		DropItem "Clip", 256, 5;
		DropItem "Clip", 128, 5;
		DropItem "Clip", 64, 5;
	}
	bool isStealthed;
	
 	States
	{
	Spawn:
		ZSP2 AB 10 A_Look;
		Loop;
	See:
		ZSP2 AABBCCDD 4 A_Chase;
		TNT1 A 0 A_Jump(64,"GoStealthed");
		Loop;
    StealthedSee:
        ZSP2 AABBCCDDAABBCCDD 1 {
			A_Chase(null,null);
			// chance to dash left or right	
			if(random(1,4) == 4) A_DashSideways(8);
			A_SpawnItemEx("SpecOpsAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
    StealthedSeeLoop:
        ZSP2 AABBCCDD 1 {
			A_Chase();			
			A_SpawnItemEx("SpecOpsAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
        Loop;
	Missile:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		TNT1 A 0 A_JumpIfCloser(512, "MissileClose"); // only throw grenades when we are close
		Goto Rifle;
	MissileClose:
		TNT1 A 0 A_Jump(64, "Grenades");
		Goto Rifle;
	Rifle:
		ZSP2 E 10 A_FaceTarget;		
		ZSP2 F 4 BRIGHT Light("DMR_RifleFire") {
			A_StartSound("SpecOps/fire", CHAN_WEAPON);
			A_CustomBulletAttack(22.5,0,1,random(6,12),"BulletPuff",0,CBAF_NORANDOM);
		}
		ZSP2 E 4 A_FaceTarget;		
		ZSP2 F 4 BRIGHT Light("DMR_RifleFire") {
			A_StartSound("SpecOps/fire", CHAN_WEAPON);
			A_CustomBulletAttack(22.5,0,1,random(6,12),"BulletPuff",0,CBAF_NORANDOM);
		}
		ZSP2 E 4;
		Goto See;
	Grenades:
		TNT1 A 0 A_JumpIfCloser(96, "Rifle"); // don't grenade yourself when standing in front of the target
		TNT1 A 0 {
			A_StartSound("handgrenade/prime", CHAN_WEAPON);
		}
		ZSP2 EEE 8 A_FaceTarget;
		ZSP2 F 5 {
			A_StartSound("handgrenade/throw", CHAN_WEAPON);
			A_LobProjectile("SpecOpsGrenade",32,0,random(9,-9));
		}
		ZSP2 E 4;
		Goto See;
	GoStealthed:
		TNT1 A 0 {
			if (isStealthed) { SetStateLabel("See"); }
		}
		ZSP2 E 5 {
			isStealthed = true;
			A_StartSound("Infiltrator/stealth");
		}
		ZSP2 EEEEE 1 { // to 0.0 alpha in total		
			A_SetRenderStyle(Alpha-0.2,STYLE_Translucent);
		}
		TNT1 A 0 A_Chase(null,null, CHF_FASTCHASE);
        Goto StealthedSee;
	Pain:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZSP2 G 3;
		ZSP2 G 3 A_Pain;
		Goto See;
	Death:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZSP2 H 5;
		ZSP2 I 5 A_Scream;
		ZSP2 J 5 A_NoBlocking;
		ZSP2 K 5;
		ZSP2 L -1;
		Stop;
	XDeath:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZSP2 H 5;
		ZSP2 I 5 A_XScream;
		ZSP2 J 5 A_NoBlocking;
		ZSP2 K 5;
		ZSP2 L -1;
		Stop;
	Raise:
		ZSP2 KJIH 5;
		Goto See;
	}
}

class SpecOpsGrenade : DMR_ThrownGrenade
{
	Default
	{
		DamageType "ZombieGrenade";
		DMR_Projectile.ParticleColors "#df660f", "#ff7e1b", "#ffff00", "#ffe74b";
	}
	States
	{
	Spawn:
		THR2 A 4;
		THR2 B 1 Bright;
		Loop;
	Death:
		TNT1 A 0 {
			bNoGravity = true;
			A_Stop();
			A_SetRenderStyle(1.0,STYLE_Add);
			A_StartSound("skeleton/tracex",2);
			A_SpawnItemEx("DMR_MediumFireballImpactSpawner");
			A_QuakeEx(3,3,3,15,0,600,"",QF_RELATIVE|QF_SCALEDOWN|QF_3D,falloff:400,rollIntensity:.75);
			for (fxLoop = 0;fxLoop<=30;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(12,14),random(0,360),frandom(0,6),0,frandom(-4,4),frandom(0,6),0,frandom(-6,6),0,0,-0.1,1,-1,-0.6);
			}
			A_Explode(32,64);
		}	
		XPL2 ABCDEF 1 Bright Light("DMR_Rocket_X1");
		XPL2 GHIJKL 1 Bright Light("DMR_Rocket_X2");
		XPL2 MNOPQ 1 Bright Light("DMR_Rocket_X3") A_FadeOut(0.15);
		Stop;
	}
}

class SpecOpsAfterImage : DMR_SubtractAfterImage
{   
	Default
	{
		Alpha 0.1;
	}
}
