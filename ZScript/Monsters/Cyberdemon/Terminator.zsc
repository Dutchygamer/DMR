//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Vader
//	Sounds:		Id Software, Blizzard Entertainment, Vader
//  Sprites: 	Vader, Eriance (cannon base)
//	GLDEFs: 	Dreadopp, Sandypaper (Brightmaps)
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios
//	ZScript:	Dutchygamer
//======================================================================

class Terminator : DMR_Cyberdemon
{
	Mixin DMR_BerserkingMonster;

	Default
	{
		Tag "Kur Centurion";
		Health 5000;
		PainChance 15;
		DropItem "RocketBox", 256, 5;
		DropItem "Cell", 128, 20;
		DropItem "Cell", 128, 20;
		Scale 1.4;
		Obituary "%o was shown true discipline by a Kur Centurion.";
		-MISSILEMORE;
		+MISSILEEVENMORE;
		SeeSound "terminator/sight";
		PainSound "terminator/pain";
		DeathSound "terminator/death";
		ActiveSound "Terminator/termact";
		StencilColor "Yellow";
	}
	int boolet;
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			berserkThreshold = 1000;
		}
		TERM AB 10 A_Look;
		Loop;
	See:
		TERM A 3 {
			A_SetBerserkerTics(3,2);
			A_Chase();
			A_Playsound("Terminator/step");
		}
		TERM ABB 3 {		
			A_SetBerserkerTics(3,2);
			A_Chase();
		}
		TERM C 3 {
			A_SetBerserkerTics(3,2);
			A_Chase();
			A_Playsound("Terminator/step");
		}
		TERM CDD 3 {		
			A_SetBerserkerTics(3,2);
			A_Chase();
		}
		Loop;	
	Missile:
		TNT1 A 0 A_Jump(256, "Rockets", "RocketBurst", "Flamethrower");
		Goto See;
	Rockets:
		TERM E 6 A_FaceTarget;
		TERM F 10 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",56,25,0);
		}
		TERM E 8 A_FaceTarget;
		TERM F 10 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",56,25,0);
		}
		TERM E 8 A_FaceTarget;
		TERM F 10 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",56,25,0);
		}
		TNT1 A 0 {
			// when berserk, continue with this state
			if (!criticalDamaged) { SetStateLabel("See"); }
		}
		TNT1 A 0 {
			// 90% chance to keep attacking if target is in LoS
			if (random(1,10) > 3 && A_JumpIfTargetInLOS("Null",360,JLOSF_DEADNOJUMP)) { 
				SetStateLabel("Missile");
			}
		}
		TNT1 A 0 A_Jump(64, "See", "RocketBurst"); // 25% chance to stop firing or switch to other rockets attack
		Goto Rockets+1;
	RocketBurst:
		TERM E 12 {
			A_FaceTarget();
			A_PlaySound("heavyweapon/load");
		}
		TERM FFF 5 Bright Light("DMR_RifleFire") {
			A_FaceTarget();
			A_SpawnProjectile("TerminatorWeaveRocket",56,25,0);
		}
		TNT1 A 0 {
			// when berserk, continue with this state
			if (!criticalDamaged) { SetStateLabel("See"); }
		}
		TNT1 A 0 {
			// 90% chance to keep attacking if target is in LoS
			if (random(1,10) > 3 && A_JumpIfTargetInLOS("Null",360,JLOSF_DEADNOJUMP)) { 
				SetStateLabel("Missile");
			}
		}
		TNT1 A 0 A_Jump(64, "See", "Rockets"); // 25% chance to stop firing or switch to other rockets attack
		Goto RocketBurst;
	Grenades:
        TNT1 A 0 {
			if (criticalDamaged)
				attackloop = -2;
			else
				attackloop = 0;
		}		
		TERM GGG 6 {
			A_Facetarget();
			A_PlaySound("heavyweapon/load");
		}
		TERM G 6 A_Facetarget;
		TERM H 4 Bright Light("DMR_RifleFire") {
			A_LobProjectile("NobleVanguardGrenade",56,-24, frandom(-5,5));
			attackloop++;
		}
		TERM G 3 A_Facetarget;
		TERM I 4 Bright Light("DMR_RifleFire") {
			A_LobProjectile("NobleVanguardGrenade",56,-24, frandom(-5,5));
			attackloop++;
		}
		TERM G 3 A_Facetarget;
		TNT1 A 0 A_JumpIf(attackloop >= 6,"GrenadesEnd");
		Goto Grenades+5;
	GrenadesEnd:
		TERM G 8 A_Facetarget;
		TNT1 A 0 {
			// when berserk, continue with this state
			if (!criticalDamaged) { SetStateLabel("See"); }
		}
		TNT1 A 0 {
			// 90% chance to keep attacking if target is in LoS
			if (random(1,10) > 3 && A_JumpIfTargetInLOS("Null",360,JLOSF_DEADNOJUMP)) { 
				SetStateLabel("Missile");
			}
		}
		Goto See;
	Flamethrower:
		TNT1 A 0 {
			// switch to grenades if target is too far away
			if(target && Distance3D(target) > 300) SetStateLabel("Grenades");
		}
		TERM G 12 Bright A_FaceTarget;
		TNT1 A 0 { 
			attackloop = 0; 
			A_PlaySound ("flamethrower/fire", CHAN_WEAPON);
		}
	FlamethrowerLoop:
		TNT1 A 0 A_JumpIf(attackloop >= 12,"FlamethrowerEnd");
		TERM K 1 Bright {
			A_FaceTarget();
			attackloop++;
			A_SpawnProjectile("DMR_FlamethrowerBallLarge",56,-24,random(-3,3));
		}
		Loop;
	FlamethrowerEnd:
		TNT1 A 0 A_Jump(128, "Rockets", "Grenades"); // large chance to switch to a different weapon
		TERM G 12 A_MonsterRefire(10,"See");
		Goto Flamethrower;
	CriticalDamage:
		TNT1 A 0 { bNOPAIN = true; }
		TERM A 10 Light("TerminatorGoBerserk") {
			A_PlaySound("terminator/pain", 7);
		}
		TNT1 A 0 {
			A_PlaySound("terminator/sight", 7);
		}
		TERM AAAAAAAAAAAAAAAAAAAA 1 {
			A_SpawnItemEx("TerminatorGoneBerserkSmokeCloud",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("TerminatorGoneBerserkSmokeCloud",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
		}
		TERM A 10 Light("TerminatorGoBerserk");
		TNT1 A 0 {
			criticalDamaged = true;
			bNOPAIN = false;
		}
		Goto See;
	Pain:
		TERM L 10 A_Pain;
		Goto See;
	Death:	
		TERM LLLLLL 6 {
			A_SpawnItemEx("DMR_TerminatorDeathExplosionSpawner");
		}
		TERM M 6 A_Scream;
		TERM N 6;
		TERM OPQ 5 Bright;
		TERM R 6 Bright {
			A_SpawnItemEx("DMR_BossDeathFinalExplosion");
			A_SpawnProjectile("TerminatorHead",90,15,-170,0);
			A_SpawnProjectile("TerminatorShoulder",75,60,-70,0);
			A_SpawnProjectile("TerminatorArm",0,60,-90,0);
		}
		TERM STUV 4 Bright;
		TERM W 4;
		TERM X 6 A_NoBlocking;
		TERM Y 6;
		TERM Z 6 A_Playsound("Terminator/step");
		TERM [ 50;
		TERM [ -1 A_BossDeath;
		Stop;
	}
}

//======================================================================
//  Original credits
//======================================================================
//	ZScript: 	Cutmanmike, modified by Dutchygamer
//======================================================================
class TerminatorWeaveRocket : DMR_SmallRocket
{
	double dist;
	
	override void Tick()
	{
		if (dist == 0)
		{
			// get a random weave index, and set the distance to the default of 1.5
			WeaveIndexXY = random(0,63);
			dist = 1.5;
			
			FLineTraceData line;

			// if projectile would hit a wall by weaving into it, set weave distance to 0
			LineTrace(angle + 48, 128, 0, TRF_THRUACTORS, height/2, 0, 0, line);
			if (line.HitType == TRACE_HitWall)
			{
				dist = 0;
			}

			// check same for other direction
			LineTrace(angle - 48, 128, 0, TRF_THRUACTORS, height/2, 0, 0, line);
			if (line.HitType == TRACE_HitWall)
			{
				dist = 0;
			}
		}

		// perform the weave with the calculated distance if we're still moving
		if (Abs(vel.x + vel.y) >= 0.1)
		{
			A_Weave(2,2,dist,dist);
		}	
		
		Super.Tick();
	}
}

class TerminatorGoneBerserkSmokeCloud : DMR_SmokeCloud
{
	Default
	{
		Scale 0.55;
		Alpha 0.45;
	}
	States
	{
	Spawn:
		SMOK AB 3;
		SMOK CDEFGH 12;
		SMOK IJ 3;
		Stop;
	}
}

class TerminatorBerserkingSmokeCloud : DMR_SmokeCloud
{
	Default
	{
		Scale 0.55;
		Alpha 0.2;
	}
	States
	{
	Spawn:
		SMOK AB 2;
		SMOK CDEFGH 8;
		SMOK IJ 2;
		Stop;
	}
}


//TODO nalopen hoe dit nou hoort te werken
class Terminatorpuff : Bulletpuff
{
	Default
	{
		Renderstyle "ADD";
		Alpha 0.75;
		scale 0.75;
		Decal "BulletChip";
	}
	States
	{
	Spawn:
	Melee:
		TPUF A 2 Bright;
		TPUF A 0 A_Jump(128,10);
		TPUF BCDEFGH 2 Bright;
		Stop;
		TPUF IJKLMNO 2 Bright;
		Stop;
	}
}

class TerminatorArm : DMR_DroppedShield
{
	Default
	{
		Radius 12;
		Height 15;
		Speed 3;
		scale 1.6;
	}
	States
	{
	Spawn:
		TARM A 5;
		TARM B 5;
		TARM CDE 5;
	Death:
		TARM F -1;
		Stop;
	}
}

class TerminatorHead : DMR_DroppedShield
{
	Default
	{
		Radius 6;
		Height 8;
		Speed 10;
		Scale 1.6;
	}
	States
	{
	Spawn:
		THAD DEFGHABC 2;
		loop;
	Death:
		THAD I -1;
		loop;
	}
}

class TerminatorShoulder : DMR_DroppedShield
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 8;
		Scale 1.6;
	}
	States
	{
	Spawn:
		TSHO ABCDEFGH 2;
		loop;
	Death:
		TSHO I -1;
		loop;
	}
}