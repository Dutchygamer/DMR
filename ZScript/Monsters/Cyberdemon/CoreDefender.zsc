//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	ProjectAngel
//	Sounds:		Wirehead Studios, id Software, RavenSoftware, ProjectAngel
//  Sprites: 	Rogue Entertainment, Monolith, Id Software, 3d Realms, Ghastly_Dragon (edits by Ichor, Ghastly_Dragon)
//	GLDEFs: 	ProjectAngel
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios
//	ZScript:	Dutchygamer
//======================================================================

class CoreDefender : DMR_Cyberdemon
{
	Default
	{
		Tag "Core defender";
		Health 7000;
		PainChance 5;
		DropItem "RocketBox", 256, 5;
		DropItem "RocketBox", 256, 5;
		DropItem "CellPack", 256, 100;
		DropItem "CellPack", 128, 100;
		DropItem "Cell", 128, 20;
		DropItem "Cell", 128, 20;
		DropItem "Cell", 128, 20;
		+NOBLOOD;
		+DONTGIB;
		+MISSILEMORE;
		SeeSound "coredefender/sight";
		ActiveSound "coredefender/active";
		DeathSound "coredefender/death";
		PainSound "coredefender/pain";
		Obituary "The Core Defender turned %o into a slave to the system.";		
	}
	
    States
    {
    Spawn:
		ROB4 A 10 A_Look;
		Loop;
	See:
		ROB4 BBCC 3 A_Chase();
		TNT1 A 0 A_StartSound("kurcenturion/step");
		ROB4 DDEE 3 A_Chase();
		TNT1 A 0 A_StartSound("kurcenturion/step");
		ROB4 DDCC 3 A_Chase();
		TNT1 A 0 A_StartSound("kurcenturion/step");
		Loop;
	Missile:
		TNT1 A 0 A_Jump(80,"ObeliskLaser");
		TNT1 A 0 A_Jump(256,"Plasma", "Rockets","ClusterMissile");
		Goto See;
	Plasma:		
		ROB4 C 6 A_FaceTarget;
		ROB4 FFFF 8 Bright Light("DMR_LaserFire") {
			A_FaceTarget();
			A_StartSound("baby/attack", CHAN_WEAPON);
			A_SpawnProjectile("WeavotronPlasma",64,-42,0);
			A_SpawnProjectile("WeavotronPlasma",64,-42,-2);
			A_SpawnProjectile("WeavotronPlasma",64,-42,2);
		}
		ROB4 G 6;
		Goto See;
	ObeliskLaser:
		TNT1 A 0 {
			bNOPAIN = true; 
			A_StartSound("coredefender/lasercharge",CHAN_WEAPON,1.0,0,ATTN_NONE);
			A_SpawnItemEx("CoreDefenderLaserCharge",0,0,0,0,0,0,0,SXF_SETMASTER);
			A_VileTarget("CoreDefenderLaserTargetter1");
		}
		ROB4 CCCC 4 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser", 10);
		}
		TNT1 A 0 {
			A_VileTarget("CoreDefenderLaserTargetter2");
		}
		ROB4 CCCCCCCC 2 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser2", 10);
		}
		TNT1 A 0 {
			A_VileTarget("CoreDefenderLaserTargetter3");
		}
		ROB4 CCCCCCCCCCCCCCCC 1 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser3", 10);
		}
		ROB4 F 6 Bright Light("DMR_LaserFireBig") {
			A_RemoveChildren(1,RMVF_EVERYTHING,"CoreDefenderLaserCharge");
			A_SpawnProjectile("CoreDefenderObeliskLaser",64,-42,0);
		}
		ROB4 G 6 {
			bNOPAIN = false; 
		}
		TNT1 A 0 {
			bNOPAIN = false;
		}
		Goto See;
	ClusterMissile:
		TNT1 A 0 A_JumpIfCloser(350, "Rockets"); // use dumbfire rockets when target is nearby
		ROB4 AAA 6 A_FaceTarget;
		ROB4 J 8 Bright Light("DMR_RifleFire") A_SpawnProjectile("CoreDefenderClusterMissile",100,24,0);
		ROB4 J 8 Bright Light("DMR_RifleFire") A_SpawnProjectile("CoreDefenderClusterMissile",100,-24,0);
		ROB4 KKK 6;
		Goto See;
	Rockets:
		ROB4 A 6 A_FaceTarget;
		ROB4 J 8 Bright Light("DMR_RifleFire") A_SpawnProjectile("DMR_Rocket",100,24,0);
		ROB4 J 8 Bright Light("DMR_RifleFire") {
			A_FaceTarget();
			A_SpawnProjectile("DMR_Rocket",100,-24,0);
		}
		ROB4 K 8 A_FaceTarget;
		ROB4 J 8 Bright Light("DMR_RifleFire") A_SpawnProjectile("DMR_Rocket",100,24,0);
		ROB4 J 8 Bright Light("DMR_RifleFire") {
			A_FaceTarget();
			A_SpawnProjectile("DMR_Rocket",100,-24,0);
		}
		ROB4 K 6;
		Goto See;
	Pain:
		ROB4 G 10 A_Pain;
		Goto See;
	Death:
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING);
		ROB4 G 6 {
			A_FaceTarget();
			A_Scream();
			A_SpawnItemEx("DMR_CyberDeathExplosionSpawner");
		}
		ROB4 GGLLAAAA 6 Bright {
			A_FaceTarget();
			A_SpawnItemEx("DMR_CyberDeathExplosionSpawner");
		}
		TNT1 A 0 A_NoBlocking;
		ROB4 AA 6 Bright {
			A_FaceTarget();
			A_SpawnItemEx("DMR_CyberDeathExplosionSpawner");
		}
		ROB4 M 50 {
			A_SpawnItemEx("DMR_BossDeathFinalExplosion");
		}
		ROB4 M -1 A_BossDeath;
		Stop;
  }
}

// homing missile that breaks up in partially homing clusters near its target
class CoreDefenderClusterMissile : DMR_Rocket
{
	Default
	{
		DamageFunction(random(10,30));
		+SEEKERMISSILE;
		SeeSound "coredefender/cluster";
		DeathSound "";
		Scale 1.2;
		Decal "MediumScorch";
	}
	States
	{
	Spawn:
		HMIS A 1 Bright {
			A_SeekerMissile(1,8,SMF_PRECISE); 
			A_SpawnItemEx("DMR_MediumFireballTrail",-35,0,4,frandom(-1,0),frandom(-1,1),frandom(-1,0));
			A_SpawnItemEx("DMR_MediumSmokeCloud",-35,0,4,frandom(-1,0));
		}
		HMIS A 0 A_JumpIfTracerCloser(150, "Cluster");
		Loop;
	Cluster:
		TNT1 A 0 {
			A_StartSound("weaponssmallrocket/launch",1);
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,random(-5,-10),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,random(-2,-5),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,0,CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,random(2,5),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));						
			A_SpawnProjectile("CoreDefenderClusterSubProjectile",2,0,random(5,10),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(0,-5));
		}
	Death:
		TNT1 A 0 {
			A_Stop();
			A_SetRenderStyle(1.0,STYLE_Add);	
			A_StartSound("weapons/rocklx",2);
			A_SpawnItemEx("DMR_MediumFireballImpactSpawner");
			for (fxLoop = 0;fxLoop<=50;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(18,24),frandom(12,14),random(0,360),frandom(0,9),0,frandom(-7,7),frandom(0,7),0,frandom(-7,7),0,0,-0.1,1,-1,-0.6);
			}
		}
		MISL B 8 Bright A_Explode(20,64);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

// cluster missile sub-projectile
class CoreDefenderClusterSubProjectile : DMR_FiredGrenade
{
	Default
	{
		Speed 12;
		DamageFunction(random(10,30));
		WallBounceFactor 0.4;
		Scale 0.5;
		SeeSound "";
		Decal "MediumScorch";		
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			grenadeTimer = random(0,20);
		}
		SGRN A 1 {
			A_SpawnItemEx("DMR_SmokeCloud",-20,0,4,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			grenadeTimer++;
		}
		Wait;
	// actual explosion
	XDeath:
		TNT1 A 0 {
			A_SetRenderStyle(1.0,STYLE_Add);
			bNoGravity = true;
			A_Stop();
			A_StartSound("skeleton/tracex",2);
			A_SpawnItemEx("DMR_MediumFireballImpactSpawner");
			for (fxLoop = 0;fxLoop<=50;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(18,24),frandom(12,14),random(0,360),frandom(0,9),0,frandom(-7,7),frandom(0,7),0,frandom(-7,7),0,0,-0.1,1,-1,-0.6);
			}
		}
		MISL B 8 Bright A_Explode(48,64);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

class CoreDefenderObeliskLaser : DMR_LaserBase
{
	Default
	{
		DamageFunction(random(100,300));
		// this is just for this weapon
		+EXTREMEDEATH;
		+FORCERADIUSDMG;
		RenderStyle "Add";
		Alpha 0.75;
		Translation "112:127=176:191";
		MissileType "CoreDefenderObeliskLaserTrail";
		MissileHeight 10;
		SeeSound "coredefender/laserfire";
		Decal "BigRedLaserLightning";
		DMR_FastProjectile.ParticleColors "#ff0000", "#d20000", "#b90000", "#ff0f0f";
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Loop;
	Death:
		BFE1 A 8 Bright {
			A_Explode(108,48);
			A_SpawnItemEx("DMR_LaserImpactFlareBig");
			for (fxLoop = 0;fxLoop<=120;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(12,14),random(0,360),frandom(0,6),0,frandom(-4,4),frandom(0,6),0,frandom(-8,8),0,0,-0.1,1,-1,-0.6);
			}
		}
		BFE1 BCDEF 8 Bright;
		Stop;
	}
}

class CoreDefenderObeliskLaserTrail : DMR_LaserTrailBase
{
	Default
	{
		Scale 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SpawnItemEx("DMR_LaserFlareBig",0,0,0,frandom(-1,0),frandom(-1,1),frandom(0,1));
		LASB A 1 Bright;
	SpawnLoop:
		LASB A 1 Bright A_FadeOut(0.1);
		Loop;
	}
}


class CoreDefenderTargettingLaser : Actor
{
	Default
	{
		RenderStyle "Add";
		Scale 0.1;
		+NOINTERACTION;
		+FLATSPRITE;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetPitch(90);
		LASB A 1 Bright;
		Stop;
	}
}

class CoreDefenderTargettingLaser2 : CoreDefenderTargettingLaser
{
	Default
	{
		Scale 0.15;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetPitch(90);
		LASB A 1 Bright;
		Stop;
	}
}

class CoreDefenderTargettingLaser3 : CoreDefenderTargettingLaser
{
	Default
	{
		Scale 0.2;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetPitch(90);
		LASB A 1 Bright;
		Stop;
	}
}

class CoreDefenderLaserCharge : DMR_ProjectileTrail
{
	Default
	{
		Scale 0.15;
		+ROLLSPRITE;
	}
	States
	{
	Spawn:
		LASB A 1 Bright Light("DMR_LaserCharge") {
			A_Warp(AAPTR_MASTER,10,-42,64,0,WARPF_NOCHECKPOSITION);
			if (Scale.x < 3.5) { 
				A_SetScale(Scale.X+0.08); 
			}	
			A_SetRoll(roll);
			roll += 10;
		}
		Loop;
	}
}

class CoreDefenderLaserTargetter1 : DMR_ArchvileFire
{
	Default
	{
		Alpha 0.2;
		Scale 0.5;
	}
	States
	{
	Spawn:	
		LAST AAAAAAAAA 2 Bright A_Warp(AAPTR_TRACER,30,0,55,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
		stop;
	}
}

class CoreDefenderLaserTargetter2 : CoreDefenderLaserTargetter1
{
	Default
	{
		Alpha 0.5;
	}
}

class CoreDefenderLaserTargetter3 : CoreDefenderLaserTargetter1
{
	Default
	{
		Alpha 0.8;
	}
}
