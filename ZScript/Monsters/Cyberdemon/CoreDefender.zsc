//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	ProjectAngel
//	Sounds:		Wirehead Studios, id Software, RavenSoftware, ProjectAngel
//  Sprites: 	Rogue Entertainment, Monolith, Id Software, 3d Realms, Ghastly_Dragon (edits by Ichor, Ghastly_Dragon)
//	GLDEFs: 	ProjectAngel
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios
//	ZScript:	Dutchygamer
//======================================================================

class CoreDefender : DMR_Cyberdemon
{
	Default
	{
		Tag "Core defender";
		Health 7000;
		PainChance 5;
		DropItem "RocketBox", 256, 5;
		DropItem "RocketBox", 256, 5;
		DropItem "CellPack", 256, 100;
		DropItem "CellPack", 128, 100;
		DropItem "Cell", 128, 20;
		DropItem "Cell", 128, 20;
		DropItem "Cell", 128, 20;
		+NOBLOOD;
		+DONTGIB;
		SeeSound "darkinquisitor/laugh";
		ActiveSound "darkinquisitor/active";
		DeathSound "darkinquisitor/death";
		PainSound "darkinquisitor/pain";
		Obituary "%o was made a slave to the system.";		
	}
	int explode;
	
    States
    {
    Spawn:
		ROB4 A 10 A_Look;
		Loop;
	See:
		ROB4 BB 3 A_Chase;
		ROB4 C 3 A_PlaySound("darkinquisitor/step");
		ROB4 CDDEE 3 A_Chase;
		ROB4 D 3 A_PlaySound("darkinquisitor/step");
		ROB4 DCC 3 A_Chase;
		Goto See;
	Missile:
		TNT1 A 0 A_Jump(80,"ObeliskLaser","ClusterMissile");
		TNT1 A 0 A_Jump(256,"SmallLaser", "Rockets");
		Goto See;
	SmallLaser:		
		ROB4 CCCC 4 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser", 10);
		}		
		ROB4 FFF 6 Bright Light("DMR_LaserFire") {
			A_FaceTarget();
			A_SpawnProjectile("SmallRedLaser",64,-42,0);			
		}
		ROB4 G 6;
		Goto See;
	ObeliskLaser:
		TNT1 A 0 {
			A_PlaySound("darkinquisitor/lasercharge", CHAN_WEAPON);
			A_SpawnItemEx("CoreDefenderLaserCharge",0,0,0,0,0,0,0,SXF_SETMASTER);
			A_VileTarget("CoreDefenderLaserTargetter1");
		}
		ROB4 CCCC 4 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser", 10);
		}
		TNT1 A 0 {
			A_VileTarget("CoreDefenderLaserTargetter2");
		}
		ROB4 CCCCCCCC 2 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser2", 10);
		}
		TNT1 A 0 {
			A_VileTarget("CoreDefenderLaserTargetter3");
		}
		ROB4 CCCCCCCCCCCCCCCC 1 {
			A_FaceTarget();
			A_CustomRailgun(0,-42,"","",RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT,0,0,"",0,0,0,0, 12, 0, "CoreDefenderTargettingLaser3", 10);
		}
		ROB4 F 6 Bright Light("DMR_LaserFireBig") A_SpawnProjectile("CoreDefenderObeliskLaser",64,-42,0);
		ROB4 G 6;
		Goto See;
	ClusterMissile:
		TNT1 A 0 A_JumpIfCloser(350, "Rockets"); //use dumbfire rockets when target is nearby
		ROB4 A 6 A_FaceTarget;
		ROB4 J 12 Bright Light("DMR_RifleFire") A_SpawnProjectile("CoreDefenderClusterMissile",100,24,0);
		ROB4 A 8 A_FaceTarget;
		ROB4 J 12 Bright Light("DMR_RifleFire") A_SpawnProjectile("CoreDefenderClusterMissile",100,-24,0);
		Goto See;
	Rockets:
		ROB4 A 6 A_FaceTarget;
		ROB4 J 10 Bright Light("DMR_RifleFire") A_SpawnProjectile("DMR_Rocket",100,24,0);
		ROB4 A 8 A_FaceTarget;
		ROB4 J 10 Bright Light("DMR_RifleFire") A_SpawnProjectile("DMR_Rocket",100,-24,0);
		ROB4 A 8 A_FaceTarget;
		ROB4 J 10 Bright Light("DMR_RifleFire") A_SpawnProjectile("DMR_Rocket",100,24,0);
		ROB4 A 8 A_FaceTarget;
		ROB4 J 10 Bright Light("DMR_RifleFire") A_SpawnProjectile("DMR_Rocket",100,-24,0);
		Goto See;
	Pain:
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING,"CoreDefenderLaserCharge");
		ROB4 G 10 A_Pain;
		Goto See;
	Death:
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING);
		ROB4 L 10 A_Scream;
		ROB4 LLLLLLLLLLLLLLL random(2,3) Bright {
			explode = random(1,3);
			if(explode > 1) //spawn explosion
			{
				A_SpawnItemEx("DMR_MonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			}
		}	
		ROB4 LL random(2,3) {
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
		}	
		ROB4 M random(2,3) {
			A_NoBlocking();
			A_SpawnItemEx("DMR_BossMonsterExplosion",0,0,0);
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
			A_SpawnItemEx("DMR_SilentMonsterExplosion",random(25,-25),random(25,-25),random(20,120)); 
		}
		ROB4 M 50;
		ROB4 M -1 A_BossDeath;
		Stop;
  }
}

//homing missile that breaks up in partially homing clusters near its target
class CoreDefenderClusterMissile: DMR_Rocket
{
	Default
	{
		Speed 25;
		DamageFunction(random(10,30));
		+SEEKERMISSILE;
		SeeSound "darkinquisitor/cluster";
		DeathSound "weapons/rocklx";
	}
	States
	{
	Spawn:
		HMIS A 1 Bright Light("DMR_ROCKET") {
			A_SeekerMissile(1,8,SMF_PRECISE); 
			A_SpawnItemEx("DMR_MediumFireballTrail",-25,0,5,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_MediumSmokeCloud",-25,0,5,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
		}
		HMIS A 0 A_JumpIfTracerCloser(180, "Death");
		Loop;
	Death:
		TNT1 AAAAA 0 {
			A_SpawnItemEx("DMR_FireBouncingDebris",random(-2,2),random(-2,2),random(-2,2),frandom(-8,8),frandom(-8,8),frandom(-2,8)); 
		}
		TNT1 A 0 {
			A_Stop();
			//split up in subprojectiles, which can randomly home in or not
			A_SpawnProjectile("CoreDefenderSubProjectile", 0, 0, 0+random(0,370));
			A_SpawnProjectile("CoreDefenderSubProjectile", 0, 0, 0+random(0,370));
			A_SpawnProjectile("CoreDefenderSubProjectile", 0, 0, 0+random(0,370));
			A_SpawnProjectile("CoreDefenderSubProjectile", 0, 0, 0+random(0,370));
			A_SpawnProjectile("CoreDefenderSubProjectile", 0, 0, 0+random(0,370));
		}
		MISL B 8 Bright Light("DMR_ROCKET_X1") A_Explode(20, 64);
		MISL C 6 Bright Light("DMR_ROCKET_X2");
		MISL D 4 Bright Light("DMR_ROCKET_X3");
		Stop;
	}
}

class CoreDefenderSubProjectile : DMR_ClusterSubProjectile { }

/*
class CoreDefenderSmallLaser : DMR_LaserBase
{
	Default
	{
		DamageFunction(random(10,30));
		Translation "112:127=176:191";
		MissileType "CoreDefenderSmallLaserTrail";
		MissileHeight 10;
	}
}

class CoreDefenderSmallLaserTrail : DMR_LaserTrailBase { }
*/

class CoreDefenderObeliskLaser : DMR_LaserBase
{
	Default
	{
		DamageFunction(random(100,300));
		//this is just for this weapon
		+EXTREMEDEATH;
		+FORCERADIUSDMG;
		RenderStyle "Add";
		Alpha 0.75;
		Translation "112:127=176:191";
		MissileType "CoreDefenderObeliskLaserTrail";
		MissileHeight 10;
		SeeSound "darkinquisitor/laserfire";
	}
	States
	{
	Spawn:
		TNT1 A 1;
		Loop;
	Death:
		BFE1 A 8 Bright {
			A_Explode(108,48);
			A_SpawnItemEx("DMR_LaserImpactFlareBig");
		}
		BFE1 BCDEF 8 Bright;
		Stop;
	}
}

class CoreDefenderObeliskLaserTrail : DMR_LaserTrailBase
{
	Default
	{
		Scale 0.4;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay			A_SpawnItemEx("DMR_LaserFlareBig",0,0,0,frandom(-1,0),frandom(-1,1),frandom(0,1));
		LASB A 1 Bright;
	SpawnLoop:
		LASB A 1 Bright A_FadeOut(0.1);
		Loop;
	}
}


class CoreDefenderTargettingLaser : Actor
{
	Default
	{
		RenderStyle "Add";
		Scale 0.1;
		+NOINTERACTION;
		+FLATSPRITE;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetPitch(90);
		LASB A 1 Bright;
		Stop;
	}
}

class CoreDefenderTargettingLaser2 : CoreDefenderTargettingLaser
{
	Default
	{
		Scale 0.15;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetPitch(90);
		LASB A 1 Bright;
		Stop;
	}
}

class CoreDefenderTargettingLaser3 : CoreDefenderTargettingLaser
{
	Default
	{
		Scale 0.2;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_SetPitch(90);
		LASB A 1 Bright;
		Stop;
	}
}

class CoreDefenderLaserCharge : DMR_ProjectileTrail
{
	Default
	{
		Scale 0.1;
	}
	States
	{
	Spawn:
		LASB AAAAAAAAAAAAAAAAAA 1 Bright Light("DMR_LaserCharge1") {
			A_Warp(AAPTR_MASTER,10,-42,64,0,WARPF_NOCHECKPOSITION);
			A_SetScale(Scale.X+0.08);		
		}
		LASB AAAAAAAAAAAAAAAAAA 1 Bright Light("DMR_LaserCharge2") {
			A_Warp(AAPTR_MASTER,10,-42,64,0,WARPF_NOCHECKPOSITION);
			A_SetScale(Scale.X+0.08);		
		}
		LASB AAAAAAAAAAAAAAAAAA 1 Bright Light("DMR_LaserCharge3") {
			A_Warp(AAPTR_MASTER,10,-42,64,0,WARPF_NOCHECKPOSITION);
			A_SetScale(Scale.X+0.08);		
		}
		Stop;
	}
}

class CoreDefenderLaserTargetter1 : DMR_ArchvileFire
{
	Default
	{
		Alpha 0.2;
		Scale 0.5;
	}
	States
	{
	Spawn:	
		LAST AAAAAAAAA 2 Bright A_Warp(AAPTR_TRACER,30,0,55,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
		stop;
	}
}

class CoreDefenderLaserTargetter2 : CoreDefenderLaserTargetter1
{
	Default
	{
		Alpha 0.5;
	}
}


class CoreDefenderLaserTargetter3 : CoreDefenderLaserTargetter1
{
	Default
	{
		Alpha 0.8;
	}
}

