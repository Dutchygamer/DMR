//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Finalizer, Tormentor667, Vader
//	Sounds:		Id Software
//  Sprites: 	Id Software Raven Software (edits by Wolfendoom, Eriance, Vader, HorrorMovieGuy, Finalizer)
//	GLDEFs: 	n/a
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		EA Games
//	ZScript:	Dutchygamer
//  Sprites:	Dutchygamer (modification of original sprites)
//	DustedPandemonic for improvements to the ShieldWall logic
//======================================================================

class NobleVanguard : DMR_BaronOfHell
{
	Default
	{
		Tag "Noble vanguard";
		Health 1400;
		PainChance 35;
		DropItem "RocketAmmo", 256, 1;
		DropItem "RocketAmmo", 128, 1;
		DropItem "RocketAmmo", 128, 1;
		Obituary "%o played dodgeball with a noble vanguard and lost.";
		HitObituary "A noble vanguard blew %o away.";
		SeeSound "Paladin/Sight";
		PainSound "Paladin/Pain"; 
		DeathSound "Paladin/Death";
		ActiveSound "Paladin/Active";
		
		PainChance "DMR_ShieldBroken", 256;
	}
	States
	{ 
	Spawn: 
		HPAL AB 10 A_Look;
		Loop;
	See:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPAL AA 3 A_Chase;
		HPAL BB 3 A_Chase;
		TNT1 A 0 A_PlaySound("Paladin/Step");
		HPAL CC 3 A_Chase;
		HPAL DD 3 A_Chase;
		TNT1 A 0 A_PlaySound("Paladin/Step");
		Goto See+1;
	SeeShield:
		HPAL EF 5 A_Chase;
		TNT1 A 0 A_PlaySound("Paladin/Step");
		HPAL GH 5 A_Chase;
		TNT1 A 0 A_PlaySound("Paladin/Step");
		TNT1 A 0 A_Jump (96, "See"); //small chance to lower shield
		Goto SeeShield;
	Melee:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPAL MN 6 A_FaceTarget;
		HPAL O 6 A_CustomMeleeAttack(random(20,60),"Paladin/Melee","Paladin/Swing");
		Goto See;
	Missile:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		TNT1 A 0 A_JumpIfCloser(256, "Grenade"); //always grenade when close
		TNT1 A 0 A_Jump(128, "Grenade"); //else 50/50
		Goto ShieldBlast;
	Grenade:
		HPAL II 8 A_FaceTarget;
		HPAL J 8 Bright Light("DMR_RifleFire") {
			A_FaceTarget();
			if (target && Distance3D(target) <= 750)
			{
				A_SpawnProjectile("NobleVanguardGrenade",24,16,0,CMF_OFFSETPITCH,-5);
				return;
			}
			else 
			{
				A_SpawnProjectile("NobleVanguardGrenade",24,16,0,CMF_OFFSETPITCH,-20);
				return;
			}
		}
		HPAL I 8;
		Goto See;
	ShieldBlast:
		TNT1 A 0 {
			A_SpawnItemEx("NobleVanguardShieldWall",0,0,0,0,0,0,0,SXF_SETMASTER);			
		}
		HPAL K 4 A_FaceTarget;
		HPAL KKKKK 4 {
			A_FaceTarget();
			A_SpawnItemEx("DMR_PlasmaRuneTrail",0,frandom(-1,1),frandom(27,28),0,0,0,0,SXF_SETMASTER);
		}
		HPAL L 4 Bright Light("DMR_DemonPlasmaFire") A_SpawnProjectile("NobleVanguardPlasmaRune",28,0);
		HPAL L 4 Bright Light("DMR_DemonPlasmaFire") A_SpawnProjectile("NobleVanguardPlasmaRune",28,0,-10);
		HPAL L 4 Bright Light("DMR_DemonPlasmaFire") A_SpawnProjectile("NobleVanguardPlasmaRune",28,0,10);
		TNT1 A 0 A_Jump (128, "SeeShield"); //chance to move with shield raised
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		Goto See; //else lower shield
	Pain.DMR_ShieldBroken: //upon suffering a broken shield, stay in this painstate for a bit
		TNT1 A 0 {
			bNoPain = true; //don't switch to the default pain state when we are in this one
			A_PlaySound("shieldwall/death");
		}
		HPAL P 6 A_Pain;
		HPAL P 6;
		HPAL P 6 A_Pain;
		HPAL P 6;
		HPAL P 6 A_Pain;
		HPAL P 6;
		HPAL P 6 A_Pain;
		HPAL P 6;
		HPAL P 6 A_Pain;
		HPAL P 6;
		TNT1 A 0 {
			bNoPain = false;
		}
		Goto See;
	Pain:
		TNT1 A 0 A_JumpIfCloser (512, "ClosePain");
		HPAL P 2;
		HPAL P 2 A_Pain;
		TNT1 A 0 A_Jump (96, "See"); //low chance to not raise shield
		TNT1 A 0 {
			A_SpawnItemEx("NobleVanguardShieldWall",0,0,0,0,0,0,0,SXF_SETMASTER);
		}
		HPAL KKKKKKK random(4,6) A_FaceTarget;
		TNT1 A 0 A_Jump (160, "SeeShield"); //high chance to move with shield raised
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		Goto See; //else lower shield
	ClosePain: //Less likely to raise shield when in grenading-range
		HPAL P 2;
		HPAL P 2 A_Pain;
		TNT1 A 0 A_Jump (184, "See"); //high chance to not raise shield
		TNT1 A 0 {
			A_SpawnItemEx("NobleVanguardShieldWall",0,0,0,0,0,0,0,SXF_SETMASTER);
		}
		HPAL KKKKKKK random(4,6) A_FaceTarget;
		TNT1 A 0 A_Jump (24, "SeeShield"); //low chance to move with shield raised
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		Goto See; //else lower shield
	Death:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPAL Q 7 A_Scream;
		HPAL R 7 A_SpawnItemEx("NobleVanguardDroppedShield", 0, 0, 25, 6, 0, 0, 60, SXF_SETMASTER);
		HPAL S 7;
		HPAL T 7 A_NoBlocking;
		HPAL UV 7;
		HPAL W -1;
		Stop;
	XDeath:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPLX A 6 A_PlaySound("Paladin/XDeath");
		HPLX B 6 Bright A_SpawnItemEx("NobleVanguardDroppedShield", 0, 0, 25, 6, 0, 0, 60, SXF_SETMASTER);
		HPLX CD 6 Bright;
		HPLX E 6 Bright A_NoBlocking;
		HPLX FGH 6 Bright;
		HPLX I 6;
		HPLX J -1;
		Stop;
	Raise: 
		HPAL W 7 A_KillChildren;
		HPAL VUTSRQ 7;
		Goto See;
	} 
}

class NobleVanguardGrenade : DMR_GrenadeBase
{
	Default
	{
		BounceFactor 0.45;
		WallBounceFactor 0.45;
		+EXTREMEDEATH;
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			grenadeTimer = random(0,10);
		}
		SGRN A 1 {
			A_SpawnItemEx("DMR_SmokeCloud",-20,0,4,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			grenadeTimer++;
		}
		Wait;
	//on ground, not hit anything, waiting for timer to run out
	Death:
		SGRN A 1 {		
			A_SpawnItemEx("DMR_SmokeCloud",-20,0,4,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			//detonate if timer runs out
			if(grenadeTimer >= 80) {
				return ResolveState("XDeath");
			}
			grenadeTimer++;
			return ResolveState(null);
		}
		Wait;
	//actual explosion
	XDeath:
		TNT1 A 0 {
			bNoGravity = true;
			A_Stop();
			A_PlaySound("weapons/rocklx",2);
		}		
		TNT1 AAAAAAAAAA 0 {
			A_SpawnItemEx("DMR_FireBouncingDebris",random(-1,1),random(-1,1),random(-1,1),frandom(-5,5),frandom(-5,5),frandom(-1,5));
		}
		MISL B 8 Bright A_Explode(72, 96);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

Class NobleVanguardShieldWall : DMR_ShieldWall
{
	Default
	{
		Health 250; //a bit tougher shield
	}
}

Class NobleVanguardPlasmaRune : NoblePraetorianPlasmaRune
{	
	Default
	{		
		DamageFunction(random(10,30));
		+THRUSPECIES;
		Species "DMR_ShieldWall"; //so the shield projectiles can pass through the shield
	}
}

Class NobleVanguardDroppedShield : DMR_DroppedShield
{
	States
	{
	Spawn:
		HPLS ABCDEFGH 3;
		Loop;
	Death:
		HPLS I -1;
		Loop;
	}
}