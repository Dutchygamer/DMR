//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Finalizer, Tormentor667, Vader
//	Sounds:		Id Software
//  Sprites: 	Id Software Raven Software (edits by Wolfendoom, Eriance, Vader, HorrorMovieGuy, Finalizer)
//	GLDEFs: 	n/a
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		EA Games
//	ZScript:	Dutchygamer
//  Sprites:	Dutchygamer (modification of original sprites)
//	DustedPandemonic for improvements to the ShieldWall logic
//======================================================================

class NobleVanguard : DMR_BaronOfHell
{
	Default
	{
		Tag "Kur vanguard";
		Health 1400;
		PainChance 35;
		DropItem "RocketAmmo", 256, 1;
		DropItem "RocketAmmo", 128, 1;
		DropItem "RocketAmmo", 128, 1;
		Obituary "%o played dodgeball with a kur vanguard and lost.";
		HitObituary "A kur vanguard blew %o away.";
		SeeSound "Paladin/Sight";
		PainSound "Paladin/Pain"; 
		DeathSound "Paladin/Death";
		ActiveSound "Paladin/Active";
		
		PainChance "DMR_ShieldBroken", 256;
	}
	
	int painYelp;	
	
	States
	{ 
	Spawn: 
		HPAL AB 10 A_Look;
		Loop;
	See:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPAL AABB 3 A_Chase;
		TNT1 A 0 A_PlaySound("noblebaron/step");
		HPAL CCDD 3 A_Chase;
		TNT1 A 0 A_PlaySound("noblebaron/step");
		Loop;
	SeeShield:
		HPAL EEFF 5 A_Chase;
		TNT1 A 0 A_PlaySound("noblebaron/step");
		HPAL GGHH 5 A_Chase;
		TNT1 A 0 A_PlaySound("noblebaron/step");
		TNT1 A 0 A_Jump (96, "See"); // small chance to lower shield
		Loop;
	Melee:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPAL MN 6 A_FaceTarget;
		HPAL O 6 A_CustomMeleeAttack(random(20,60),"Paladin/Melee","Paladin/Swing");
		Goto See;
	Missile:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		TNT1 A 0 A_JumpIfCloser(256, "GrenadeOrPlasma"); // always grenade when close
		TNT1 A 0 A_Jump(128, "Grenade"); // else 50/50
		Goto ShieldBlast;
	GrenadeOrPlasma:
		TNT1 A 0 A_Jump(180, "Grenade");
		Goto Plasma;
	Grenade:
		HPAL II 8 A_FaceTarget;
		HPAL J 8 Bright Light("DMR_RifleFire") A_LobProjectile("NobleVanguardGrenade",32,16);
		HPAL I 8;
		Goto See;
	Plasma:
		HPAL II 8 A_FaceTarget;
		HPAL J 8 Bright Light("DMR_HellRuneFire") A_SpawnProjectile("DMR_HellRune",32,16);
		Goto See;
	RaiseShield:
		TNT1 A 0 {
			A_SpawnItemEx("NobleVanguardShieldWall",0,0,0,0,0,0,0,SXF_SETMASTER);
		}
		HPAL KKKKK random(4,6) A_FaceTarget;
		TNT1 A 0 A_Jump(128, "ShieldBlast", "SeeShield");
		HPAL KKKKK random(4,6) A_FaceTarget;
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		Goto See;
	ShieldBlast:
		TNT1 A 0 {
			A_SpawnItemEx("NobleVanguardShieldWall",0,0,0,0,0,0,0,SXF_SETMASTER);			
		}
		HPAL K 4 A_FaceTarget;
		HPAL KKKKK 4 {
			A_FaceTarget();
			A_SpawnItemEx("DMR_PlasmaRuneTrail",0,frandom(-1,1),frandom(27,28),0,0,0,0,SXF_SETMASTER);
		}
		HPAL L 4 Bright Light("DMR_HellRuneFire") A_SpawnProjectile("NobleVanguardHellRune",28,0);
		HPAL L 4 Bright Light("DMR_HellRuneFire") A_SpawnProjectile("NobleVanguardHellRune",28,0,-10);
		HPAL L 4 Bright Light("DMR_HellRuneFire") A_SpawnProjectile("NobleVanguardHellRune",28,0,10);
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		Goto See;
	Pain.DMR_ShieldBroken: // upon suffering a broken shield, stay in this painstate for a bit
		TNT1 A 0 {
			bNoPain = true; // don't switch to the default pain state when we are in this one
			A_PlaySound("shieldwall/death");
		}
		HPAL P 12 {
			for (painYelp = 0;painYelp <= 5;painYelp++) {
				A_Pain(); 
			}
		}
		TNT1 A 0 {
			bNoPain = false;
		}
		Goto See;
	Pain:
		HPAL P 2;
		HPAL P 2 A_Pain;
		TNT1 A 0 A_Jump(128, "RaiseShield");
		Goto See;
	Death:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPAL Q 8;
		HPAL R 8 {
			A_Scream();
			A_SpawnItemEx("NobleVanguardDroppedShield",0,0,25,6,0,0,60,SXF_SETMASTER);
		}
		HPAL S 8;
		HPAL T 8 A_NoBlocking;
		HPAL UV 8;
		HPAL W -1 A_BossDeath;
		Stop;
	XDeath:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
		}
		HPLX A 5;
		HPLX B 5 Bright {
			A_PlaySound("Paladin/XDeath");
			A_SpawnItemEx("NobleVanguardDroppedShield",0,0,25,6,0,0,60,SXF_SETMASTER);
		}
		HPLX C 5 Bright {
			A_NoBlocking();
			A_SpawnItemEx("DMR_MonsterDeathExplosion",random(8,-8),0,random(20,40));
		}
		HPLX D 5 Bright {
			A_SpawnItemEx("DMR_MonsterDeathExplosion",random(8,-8),0,random(20,40));
		}
		HPLX EFGH 5 Bright;
		HPLX I 5;
		HPLX J -1;
		Stop;
	Raise: 
		HPAL W 8 A_KillChildren;
		HPAL VUTSRQ 8;
		Goto See;
	} 
}

class NobleVanguardGrenade : DMR_GrenadeBase
{
	Default
	{
		BounceFactor 0.45;
		WallBounceFactor 0.45;
		+EXTREMEDEATH;
	}
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			grenadeTimer = random(0,10);
		}
		SGRN A 1 {
			A_SpawnItemEx("DMR_SmokeCloud",-20,0,4,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			grenadeTimer++;
		}
		Wait;
	// on ground, not hit anything, waiting for timer to run out
	Death:
		SGRN A 1 {		
			A_SpawnItemEx("DMR_SmokeCloud",-20,0,4,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			// detonate if timer runs out
			if (grenadeTimer >= 80) { SetStateLabel("XDeath"); }
			grenadeTimer++;
		}
		Wait;
	// actual explosion
	XDeath:
		TNT1 A 0 {
			bNoGravity = true;
			A_Stop();
			A_PlaySound("weapons/rocklx",2);
		}		
		TNT1 A 0 {
			for (fxLoop = 0;fxLoop <= 10;fxLoop++) {
				A_SpawnItemEx("DMR_FireBouncingDebris",random(-1,1),random(-1,1),random(-1,1),frandom(-5,5),frandom(-5,5),frandom(-1,5));
			}
		}
		MISL B 8 Bright A_Explode(96,96);
		MISL C 6 Bright;
		MISL D 4 Bright;
		Stop;
	}
}

Class NobleVanguardShieldWall : DMR_ShieldWall
{
	Default
	{
		Health 250; // a bit tougher shield
	}
}

Class NobleVanguardHellRune : DMR_HellRuneSmall
{	
	Default
	{
		+THRUSPECIES;
		Species "DMR_ShieldWall"; // so the shield projectiles can pass through the shield
	}
}

Class NobleVanguardDroppedShield : DMR_DroppedShield
{
	States
	{
	Spawn:
		HPLS ABCDEFGH 3;
		Loop;
	Death:
		HPLS I -1;
		Loop;
	}
}