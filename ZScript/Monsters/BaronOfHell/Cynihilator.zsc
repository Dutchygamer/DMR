//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Eriance
//	Sounds:		Id Software, Eriance
//  Sprites: 	id Software, Raven Software, Wolfendoom, Blizzard Entertainment, Vader (edits by Eriance / Xaser)
//	GLDEFs: 	Dreadopp, SandyPaper (Brightmaps)
//======================================================================
//  Additional credits
//======================================================================
//	ZScript:	Dutchygamer
//======================================================================

class KurPraetorian : DMR_BaronOfHell
{
	Mixin DMR_BerserkingMonster;

	Default
	{
		Tag "Kur Praetorian";
		Health 2000;
		PainChance 15;
		DropItem "RocketBox", 256, 5;
		DropItem "RocketBox", 128, 5;
		DropItem "RocketAmmo", 128, 1;
		DropItem "RocketAmmo", 128, 1;
		Obituary "%o underestimated the firepower of a Kur Praetorian.";
		+MISSILEMORE;
		+MISSILEEVENMORE;
		+BOSS; // for extra funsies
		SeeSound "kurpraetorian/sight";
		PainSound "kurpraetorian/pain";
		DeathSound "kurpraetorian/death";
		Scale 1.15;
		StencilColor "Yellow";
	}
	int boolet;
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			berserkThreshold = 500;
		}
		BRU3 AB 10 A_Look;
		Loop;
	See:
		BRU3 AABB 3 {
			A_SetBerserkerTics(3,2);
			A_Chase();
		}
		TNT1 A 0 A_StartSound("cynihilator/step");
		BRU3 CCDD 3 {
			A_SetBerserkerTics(3,2);
			A_Chase();
		}
		TNT1 A 0 A_StartSound("cynihilator/step");
		Loop;
	Melee:
	Missile: 
		// when critically damaged fire more shots
        TNT1 A 0 {
			if (criticalDamaged)
				attackloop = -2;
			else
				attackloop = 0;
		}		
		TNT1 A 0 A_Jump(72, "Plasma");
		TNT1 A 0 A_Jump(256, "Rockets", "RocketBurst");
	Rockets:
		BRU3 EE 8 A_FaceTarget;
		BRU3 F 8 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",44,19);
		}
		BRU3 E 8 A_FaceTarget;
		BRU3 F 8 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",44,19);
		}
		BRU3 E 8 A_FaceTarget;
		BRU3 F 8 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",44,19);
		}
		TNT1 A 0 A_Jump(128, "Grenades");
		BRU3 E 8;
		Goto See;
	RocketBurst:
        TNT1 A 0 {
			A_StartSound("heavyweapon/load");			
		}
		BRU3 EE 10 A_FaceTarget;
	RocketBurstLoop:
		TNT1 A 0 A_JumpIf(attackloop >= 5,"RocketBurstEnd");
		BRU3 F 5 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_SmallRocket",44,19);
			attackloop++;
		}
		BRU3 E 2 A_FaceTarget;
		Loop;
	RocketBurstEnd:
		TNT1 A 0 A_Jump(128, "Grenades");
		BRU3 E 8;
		Goto See;
	Plasma:
		BRU3 EE 8 A_FaceTarget;
	PlasmaLoop:
		TNT1 A 0 A_JumpIf(attackloop >= 4,"PlasmaEnd");
		BRU3 F 6 Bright Light("DMR_HellRuneFire") {
			A_SpawnProjectile("DMR_HellRune",44,19);
			attackloop++;
		}
		BRU3 E 6 A_FaceTarget;
		BRU3 F 6 Bright Light("DMR_HellRuneFire") {
			A_SpawnProjectile("DMR_HellRuneSmall",44,19,-10);
			A_SpawnProjectile("DMR_HellRuneSmall",44,19,10);
			attackloop++;
		}
		BRU3 E 6 A_FaceTarget;
		Loop;
	PlasmaEnd:
		BRU3 E 6 A_Jump(128, "Grenades");
		Goto See;
	Grenades:
		BRU3 GS 10 {
			A_Facetarget();
			A_StartSound("heavyweapon/load");
		}
	GrenadesLoop:
		TNT1 A 0 A_JumpIf(attackloop >= 6,"GrenadesEnd");
		BRU3 H 6 Bright Light("DMR_RifleFire") {
			A_LobProjectile("CyborgAcolyteGrenade",40,-10, frandom(-5,5));
			attackloop++;
		}
		BRU3 S 6 A_Facetarget;
		BRU3 I 6 Bright Light("DMR_RifleFire") {
			A_LobProjectile("CyborgAcolyteGrenade",40,-10, frandom(-5,5));
			attackloop++;
		}
		BRU3 S 6 A_Facetarget;
		Loop;
	GrenadesEnd:
		BRU3 SG 8 A_Facetarget;
		TNT1 A 0 {
			// when not berserking stop attacking
			if (!criticalDamaged) { SetStateLabel("See"); }
			// when berserking small chance to stop attacking
			if (criticalDamaged && random(1,10) == 10) { SetStateLabel("See"); }
		}
		// otherwise switch to different attack if target is still in LoS
		TNT1 A 0 A_MonsterRefire(0,"See");
		Goto Missile;
	CriticalDamage:
		TNT1 A 0 { 
			bNOPAIN = true; 
			bQUICKTORETALIATE = true;
			A_SetSpeed(speed*1.2);
			criticalDamaged = true;
		}
		BRU3 J 10 Light("MonsterGoBerserk") {
			A_StartSound("kurpraetorian/pain",CHAN_VOICE);
			A_StartSound("kurpraetorian/sight",CHAN_VOICE,CHANF_OVERLAP);
		}
		BRU3 AAAAAAAAAAAAAAAAAAAA 1 {
			A_SpawnItemEx("GoneBerserkSmokeCloud",-5,0,50,frandom(-1,0),frandom(-1,1),frandom(0,1)); 			
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,50,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,50,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			if (random(1,4) == 1){
				A_SpawnItemEx("DMR_BossDeathExplosion",random(8,-8),0,random(20,40));				
			}
		}
		BRU3 G 10 Light("MonsterGoBerserk") {
			A_StartSound("kurpraetorian/sight",CHAN_VOICE);
			A_FaceTarget();
		}
		BRU3 G 10 A_FaceTarget;
		TNT1 A 0 { 
			bNOPAIN = false; 
			attackloop = -2;
		}
		Goto Grenades;
	Pain:
		BRU3 J 2;
		BRU3 J 4 A_Pain;
		Goto See;
	Death:
	XDeath:
		BRU3 K 20 Bright A_Scream;
		BRU3 LLLMMM 5 Bright {
			A_SpawnItemEx("DMR_BossDeathExplosion",random(8,-8),0,random(20,40));
		}
		TNT1 A 0 {
			A_NoBlocking();
		}
		BRU3 NNNOOOPPPQQQ 3 Bright {
			A_SpawnItemEx("DMR_BossDeathExplosion",random(8,-8),0,random(20,40));
		}
		BRU3 R -1 A_BossDeath;
		Stop;
	Raise: 
		BRU3 RQPONMLK 8;
		Goto See;
	}
}