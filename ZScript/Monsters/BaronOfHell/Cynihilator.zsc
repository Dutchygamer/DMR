//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Eriance
//	Sounds:		Id Software, Eriance
//  Sprites: 	id Software, Raven Software, Wolfendoom, Blizzard Entertainment, Vader (edits by Eriance / Xaser)
//	GLDEFs: 	Dreadopp, SandyPaper (Brightmaps)
//======================================================================
//  Additional credits
//======================================================================
//	ZScript:	Dutchygamer
//======================================================================

class NobleAnnihilator : DMR_BaronOfHell
{
	Mixin DMR_BerserkingMonster;

	Default
	{
		Tag "Kur Praetorian";
		Health 1800;
		PainChance 15;
		DropItem "RocketBox", 256, 5;
		DropItem "RocketBox", 128, 5;
		DropItem "RocketAmmo", 128, 1;
		DropItem "RocketAmmo", 128, 1;
		Obituary "%o underestimated the firepower of a Kur Praetorian.";
		+MISSILEMORE;
		+MISSILEEVENMORE;
		SeeSound "monster/brusit";
		DeathSound "monster/brudth";
		Scale 1.15;
		StencilColor "Yellow";
	}
	int boolet;
	
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {
			berserkThreshold = 360;
		}
		BRU3 AB 10 A_Look;
		Loop;
	See:
		BRU3 AABB 3 {
			A_SetBerserkerTics(3,2);
			A_Chase();
		}
		TNT1 A 0 A_PlaySound("noblebaron/step");
		BRU3 CCDD 3 {
			A_SetBerserkerTics(3,2);
			A_Chase();
		}
		TNT1 A 0 A_PlaySound("noblebaron/step");
		Loop;
	Melee:
	Missile: 
		TNT1 A 0 A_Jump(72, "Plasma");
		TNT1 A 0 A_Jump(256, "Rockets", "RocketBurst");
	Rockets:
		BRU3 EE 8 A_FaceTarget;
		BRU3 F 8 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",44,19);
		}
		BRU3 E 8 A_FaceTarget;
		BRU3 F 8 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",44,19);
		}
		BRU3 E 8 A_FaceTarget;
		BRU3 F 8 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_Rocket",44,19);
		}
		TNT1 A 0 A_Jump(128, "Grenades");
		BRU3 E 8;
		Goto See;
	RocketBurst:
        TNT1 A 0 {
			A_PlaySound("heavyweapon/load");			
			attackloop = 0;
		}
		BRU3 EE 10 A_FaceTarget;
		BRU3 F 5 Bright Light("DMR_RifleFire") {
			A_SpawnProjectile("DMR_SmallRocket",44,19);
			attackloop++;
		}
		BRU3 E 2 A_FaceTarget;
		TNT1 A 0 A_JumpIf(attackloop >= 5,"RocketBurstEnd");
		Goto RocketBurst+3;
	RocketBurstEnd:
		TNT1 A 0 A_Jump(128, "Grenades");
		BRU3 E 8;
		Goto See;
	Plasma:
        TNT1 A 0 {	
			attackloop = 0;
		}
		BRU3 EE 8 A_FaceTarget;
		BRU3 F 6 Bright Light("DMR_HellRuneFire") {
			A_SpawnProjectile("DMR_HellRune",44,19);
			attackloop++;
		}
		BRU3 E 6 A_FaceTarget;
		BRU3 F 6 Bright Light("DMR_HellRuneFire") {
			A_SpawnProjectile("NobleVanguardHellRune",44,19,-10);
			A_SpawnProjectile("NobleVanguardHellRune",44,19,10);
			attackloop++;
		}
		BRU3 E 6 A_FaceTarget;
		TNT1 A 0 A_JumpIf(attackloop >= 4,"PlasmaEnd");
		Goto Plasma+3;
	PlasmaEnd:
		BRU3 E 6 A_Jump(128, "Grenades");
		Goto See;
	Grenades:
        TNT1 A 0 {
			A_PlaySound("heavyweapon/load");			
			attackloop = 0;
		}
		BRU3 GS 10 A_Facetarget;
		BRU3 H 6 Bright Light("DMR_RifleFire") {
			A_LobProjectile("FormerCyborgGrenade",40,-10, frandom(-5,5));
			attackloop++;
		}
		BRU3 S 6 A_Facetarget;
		BRU3 I 6 Bright Light("DMR_RifleFire") {
			A_LobProjectile("FormerCyborgGrenade",40,-10, frandom(-5,5));
			attackloop++;
		}
		BRU3 S 6 A_Facetarget;
		TNT1 A 0 A_JumpIf(attackloop >= 6,"GrenadesEnd");
		Goto Grenades+3;
	GrenadesEnd:
		BRU3 SG 8 A_Facetarget;
		TNT1 A 0 {
			// when berserk, continue with this state
			if (!criticalDamaged) { SetStateLabel("See"); }
			//TODO LoS check anders gaat ie oneindig door schieten ook al ziet ie je niet meer
		}
		TNT1 A 0 A_Jump(230, "Missile"); // 90% chance to keep attacking
		Goto See;
	CriticalDamage:
		TNT1 A 0 { bNOPAIN = true; }
		BRU3 A 10 Light("TerminatorGoBerserk") {
			A_PlaySound("monster/termpin", 7);
		}
		TNT1 A 0 {
			A_PlaySound("monster/termsit", 7);
		}
		BRU3 AAAAAAAAAAAAAAAAAAAA 1 {
			A_SpawnItemEx("TerminatorGoneBerserkSmokeCloud",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("TerminatorGoneBerserkSmokeCloud",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
			A_SpawnItemEx("DMR_FireBouncingDebris",-5,0,70,frandom(-1,0),frandom(-1,1),frandom(0,1)); 
		}
		BRU3 A 10 Light("TerminatorGoBerserk");
		TNT1 A 0 {
			criticalDamaged = true;
			bNOPAIN = false;
		}
		Goto See;
	Pain:
		BRU3 J 2;
		BRU3 J 4 A_Pain;
		Goto See;
	Death:
	XDeath:
		BRU3 K 20 Bright A_Scream;
		BRU3 LLMM 5 Bright {
			A_SpawnItemEx("DMR_BossDeathExplosion",random(8,-8),0,random(20,40));
		}
		TNT1 A 0 A_NoBlocking();
		BRU3 NNOOPPQQ 3 Bright {
			A_SpawnItemEx("DMR_BossDeathExplosion",random(8,-8),0,random(20,40));
		}
		TNT1 A 0 A_SpawnItemEx("DMR_MonsterDeathFinalExplosion");
		BRU3 R -1 A_BossDeath;
		Stop;
	Raise: 
		BRU3 RQPONMLK 8;
		Goto See;
	}
}