//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	DavidRaven
//	Sounds:		DavidRaven, Id software
//  Sprites: 	Id Software (Zombieman), the Skulltag Team (Illucia, Player II), DavidRaven, ItsNatureToDie (altdeath)
//	GLDEFs: 	DavidRaven
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios	
//  Sprites:	Dutchygamer (modification of original sprites)
//	ZScript:	Dutchygamer
//======================================================================

class Virus : DMR_MonsterBase
{
	Default
	{
		Tag "Virus";
		Health 90;
		Gibhealth -20; // all lower tier monsters (zombies -> imp) have 20 gibhealth
		Species "DMR_Zambies";
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 150;
		SeeSound "fem/sight";
		PainSound "fem/pain";
		DeathSound "fem/death";
		ActiveSound "fem/active";
		+MISSILEMORE;
		+DOHARMSPECIES; // zombies aren't viral-proof
		DamageFactor "VirusPoison", 0.0;
		DamageFactor "ToxinCloud", 0.0;
	}
 	States
	{
	Spawn:
		ZOMW AB 10 A_Look;
		Loop;
	See:
		ZOMW AABBCCDD 3 A_Chase;
		Loop;
	Missile:
		ZOMW E 20 A_FaceTarget;
		TNT1 A 0 A_PlaySound("Virus/FireDart", CHAN_WEAPON);
		ZOMW F 4 A_SpawnProjectile ("VirusDart", 32, 0);
		ZOMW E 20;
		goto See;
	Pain:
		ZOMW G 3;
		ZOMW G 3 A_Pain;
		Goto See;
	Death:
		ZOMW H 5;
		ZOMW I 5 A_Scream;
		ZOMW J 5 A_NoBlocking;
		ZOMW KLM 5;
		ZOMW N -1;
		Stop;
	XDeath:
		ZOMW O 5;
		ZOMW P 5 A_XScream;
		ZOMW Q 5 A_NoBlocking;
		ZOMW RSTUV 5;
		ZOMW W -1;
		Stop;
	Raise:
		ZOMW MLKJIH 5;
		Goto See;
	}
}

Class VirusDart : DMR_SlowBullet
{
	Default
	{
		Speed 65;
		DamageFunction (random(25,35)); // don't use the default formula
		DamageType "VirusPoison";
		+EXTREMEDEATH; //always use explode death
		Obituary "%o got infected by a Virus.";
	}
	
	States
	{
	Spawn:
		SHLL A 1 Bright {
			A_SpawnItemEx("VirusDartTrail",0,0,0,frandom(-0.5,0),frandom(-0.5,0.5),frandom(0,0.5)); 
		}
		Loop;
	}	
	
	override int DoSpecialDamage(actor target, int damage, name damagetype)
	{
		if (target)
		{
			// inspired by Hexen's flechette.zs DoSpecialDamage()
			// we need to take the target's damageFactors into account
			// mainly to stop the projectile from spawning gas clouds when hitting a low-health Virus
		
			// Handle passive damage modifiers (e.g. PowerProtection)
			damage = target.GetModifiedDamage(damagetype, damage, true);
			// Modify with damage factors
			damage = target.ApplyDamageFactor(damagetype, damage);
			
			// spawn gas clouds from target if target dies
			if (damage > 0 && target.health < damage)
			{
				//TODO heb paar keer gezien dat ie een low-level enemy niet killed maar toch een gas cloud spawnt for some reason...
				// wellicht een fluke, krijg het niet consequent gereproduceerd			
			
				target.A_PlaySound("gas/explode");				
				
				// number and size of gas clouds depends on original health
				// always spawn at least one medium gas clouds
				target.A_SpawnItemEx("DMR_MediumGasCloud",0,0,-30,frandom(-1,1),frandom(-1,1),0,0,SXF_ORIGINATOR);
				
				if (target.GetMaxHealth() >= 100)
				{
					target.A_SpawnItemEx("DMR_MediumGasCloud",0,0,-30,frandom(-1,1),frandom(-1,1),0,0,SXF_ORIGINATOR);				
				}
				if (target.GetMaxHealth() >= 300)
				{
					target.A_SpawnItemEx("DMR_MediumGasCloud",0,0,-30,frandom(-1,1),frandom(-1,1),0,0,SXF_ORIGINATOR);				
				}
				if (target.GetMaxHealth() >= 600)
				{
					target.A_SpawnItemEx("DMR_LargeGasCloud",0,0,-30,frandom(-0.5,0.5),frandom(-0.5,0.5),0,0,SXF_ORIGINATOR);			
				}
				if (target.GetMaxHealth() >= 1000)
				{
					target.A_SpawnItemEx("DMR_LargeGasCloud",0,0,-30,frandom(-0.5,0.5),frandom(-0.5,0.5),0,0,SXF_ORIGINATOR);			
				}
			}
			// apply damage debuff effect on target if still alive
			else
			{
				target.GiveInventory("VirusDebuffGiver",1);
			}			
		}
		return Super.DoSpecialDamage(target,damage,damagetype);
	}
}


class VirusDartTrail : DMR_SmallGasTrail
{   
	Default
	{
		ALPHA 0.3;
		Scale 0.3;
	}
	States
	{
	Spawn:
		GAS2 ABCDEFGHIJKLMN 1;
		Stop;
	}
}

class VirusDebuffGiver : PowerupGiver
{
	Default
	{
		Powerup.Type "VirusDebuffEffect";
		Powerup.Duration -3;
		Powerup.Colormap 0.95,1.0,0.95;
		+INVENTORY.AUTOACTIVATE;
		+INVENTORY.ALWAYSPICKUP;	
	}
}

class VirusDebuffEffect : PowerDamage
{
	Default
	{
		Inventory.Icon "";
		Damagefactor "normal", 0.5;
		+INVENTORY.NOSCREENBLINK;
	}
}
