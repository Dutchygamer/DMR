//======================================================================
//  Original credits
//======================================================================
//  DECORATE: 	Graf Zahl
//	Sounds:		Id Software
//  Sprites: 	Id Software (edits by Xim, Vegeta, Ghastly_dragon, MagicWazard)
//	GLDEFs: 	Ghastly_dragon, MagicWazard (brightmaps)
//======================================================================
//  Additional credits
//======================================================================
//	Sounds:		Westwood Studios, EA Games
//	ZScript:	Dutchygamer
//======================================================================

class FormerSpecOpsElite : DMR_ChaingunGuy
{
	Default
	{
		Tag "Former SpecOps Elite";
		OBITUARY "%o was carbonized by a Former SpecOps Elite.";
		Health 150;
		Speed 12;
		PainChance 80;
		DamageFactor "ZombieGrenade", 0.5; // take less damage from own grenades
		+MISSILEMORE
		+DOHARMSPECIES; // zombies aren't grenade-proof
		Dropitem "Cell", 256, 20;
		DropItem "RocketAmmo", 64, 1;
	}
	bool isStealthed;
	int overheat;
	
 	States
	{
	Spawn:
		ZSP3 AB 10 A_Look;
		Loop;
	See:
		ZSP3 AABBCCDD 4 A_Chase;
		TNT1 A 0 A_Jump(64,"GoStealthed");
		Loop;
    StealthedSee:
        ZSP3 AABBCCDDAABBCCDD 1 {
			A_Chase(null,null);
			// chance to dash left or right	
			if(random(1,4) == 4) A_DashSideways(8);
			A_SpawnItemEx("SpecOpsAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
    StealthedSeeLoop:
        ZSP3 AABBCCDD 1 {
			A_Chase();			
			A_SpawnItemEx("SpecOpsAfterImage",0,0,0,0,0,0,0,SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION,128);
		}
        Loop;
	Missile:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		//TNT1 A 0 A_Jump(96, "Grenade");
		Goto HeatGun;
	HeatGun:
        TNT1 A 0 {
			// when fired three shots we force the grenade to discharge the build-up heat
			//TODO of maak variable tot een zeker moment waarbij je of moet schieten of moet dischargen na laatste schot
			if (overheat >= 3) { SetStateLabel("Grenade"); }
		}
		ZSP3 E 10 A_FaceTarget;	
		ZSP3 FFFF 2 BRIGHT Light("DMR_RifleFire") {
			A_FaceTarget();
			A_SpawnProjectile("DMR_HeatgunBall",32);
		}
		TNT1 A 0 {
			// each shot builds heat
			overheat++;
		}
		ZSP3 E 15;
		Goto See;
	Grenade:
		TNT1 A 0 {
			A_StartSound("heavyweapon/load", CHAN_WEAPON);
		}
		ZSP3 EEE 6 A_FaceTarget;
		ZSP3 F 5 Bright Light("DMR_RifleFire") A_LobProjectile("DMR_HeatgunExplosiveBall",32);
		ZSP3 E 20 {
			overheat = 0;
		}
		Goto See;
	GoStealthed:
		TNT1 A 0 {
			if (isStealthed) { SetStateLabel("See"); }
		}
		ZSP3 E 5 {
			isStealthed = true;
			A_StartSound("Infiltrator/stealth");
		}
		ZSP3 EEEEE 1 { // to 0.0 alpha in total
			A_SetRenderStyle(Alpha-0.2,STYLE_Translucent);
		}
		TNT1 A 0 A_Chase(null,null, CHF_FASTCHASE);
        Goto StealthedSee;
	Pain:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZSP3 G 3;
		ZSP3 G 3 A_Pain;
		Goto See;
	Death:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZSP3 H 5;
		ZSP3 I 5 A_Scream;
		ZSP3 J 5 A_NoBlocking;
		ZSP3 K 5;
		ZSP3 L -1;
		Stop;
	XDeath:
		TNT1 A 0 {
			isStealthed = false;
			A_SetRenderStyle(1,STYLE_Normal);
		}
		ZSP3 H 5;
		ZSP3 I 5 A_XScream;
		ZSP3 J 5 A_NoBlocking;
		ZSP3 K 5;
		ZSP3 L -1;
		Stop;
	Raise:
		ZSP3 KJIH 5;
		Goto See;
	}
}


class DMR_HeatgunBall : DMR_ZombiePlasma
{
	Default
	{		
		Speed 40;
		DamageFunction(random(6,8)); // use a very small range due to the stream of projectiles
		Alpha 0.9;
		Seesound "weapons/firmfi"; //"imp/attack";
		DeathSound "weapons/firex4"; //"weapons/plasmax";
		Decal "DImpScorch";
		DMR_Projectile.ParticleColors "#df660f", "#ff7e1b", "#ffff00", "#ffe74b";
	}
	states
	{
	Spawn:
		WIBL AABB 2 Bright {
			A_SpawnItemEx("DMR_HeatgunBallTrail",frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5));
			A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(8,10),0,frandom(-12,-6),frandom(-4,4),frandom(-4,4),frandom(-1,1),0,frandom(-1,1),0,0,-0.05,1,-1,-0.5);
		}
		Loop;
	Death:
		TNT1 A 0 {	
			// 50% chance to spawn fire field
			A_SpawnItemEx("DMR_BurningFire",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_ORIGINATOR|SXF_TRANSFERPOINTERS,128);
			//A_SpawnItemEx("DMR_PlasmaImpactFlare");
			for (fxLoop = 0;fxLoop<=20;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(12,14),random(0,360),frandom(0,6),0,frandom(-4,4),frandom(0,6),0,frandom(-6,6),0,0,-0.1,1,-1,-0.6);
			}
		}
		WIBL JKLMN 5 Bright;
		Stop;
	}
}

class DMR_HeatgunBallTrail : DMR_ProjectileTrail
{
	Default
	{
		ALPHA 0.5;
	}
	States
	{
	Spawn:
		WIBL EFGHI 5 Bright {
			A_FadeOut();
		}
		Stop;
	}
}


class DMR_HeatgunExplosiveBall : DMR_ZombiePlasma
{
	Default
	{		
		Speed 25;
		DamageFunction(random(10,30));
		Alpha 1;
		SeeSound "fatso/attack";
		DeathSound "fatso/shotx";
		-NOGRAVITY
		Gravity 0.5;
		Decal "MancubusScorch";
		DMR_Projectile.ParticleColors "#df660f", "#ff7e1b", "#ffff00", "#ffe74b";
	}
	states
	{
	Spawn:
		WIBL AAABBB 2 Bright {
			A_SpawnItemEx("DMR_HeatgunBallTrail",frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5));
			for (fxLoop = 0;fxLoop<=2;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(8,10),0,frandom(-12,-6),frandom(-4,4),frandom(-4,4),frandom(-1,1),0,frandom(-1,1),0,0,-0.05,1,-1,-0.5);
			}
		}
		Loop;
	Death:
		TNT1 AAA 0 {	
			A_SpawnItemEx("DMR_BurningFire",frandom(-1,1),frandom(-1,1),0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_ORIGINATOR|SXF_TRANSFERPOINTERS);
		}
		TNT1 A 0 {
			A_SpawnItemEx("DMR_LargeFireballImpactSpawner");
			for (fxLoop = 0;fxLoop<=30;fxLoop++)
			{
				A_SpawnParticle(GetParticleColor(),SPF_FULLBRIGHT|SPF_RELATIVE,random(10,18),frandom(12,14),random(0,360),frandom(0,6),0,frandom(-4,4),frandom(0,6),0,frandom(-6,6),0,0,-0.1,1,-1,-0.6);
			}
		}
		WIBL J 5 Bright A_Explode(72,64);
		WIBL KLMN 5 Bright;
		Stop;
	}
}
