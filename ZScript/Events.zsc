class DMR_ReplacerHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent a)
	{
		switch (a.Replacee.GetClassName()) 
		{
			// replace CommanderKeen and/or WolfensteinSS with a specific monster/random spawner, depending on the setting
			case 'WolfensteinSS':
				// "Scythe 2"
				if (dmr_replace_ss == 1)
					{ a.Replacement = 'EvilMarine'; break; }
				// "Epic 2"
				else if(dmr_replace_ss == 2)
					{ a.Replacement = 'AlienFighter'; break; }
				// "Resurgence"
				else if (dmr_replace_ss == 3)
					{ a.Replacement = 'EvilMarine'; break; }
					
				// "DMR - Nazis"
				else if (dmr_replace_ss == 11)
					{ a.Replacement = 'SSReplacer_Nazi'; break; }
				// "DMR - Cyborgs"
				else if (dmr_replace_ss == 12)
					{ a.Replacement = 'SSReplacer_Cyborgs'; break; }
				// "DMR - Nod"
				else if (dmr_replace_ss == 13)
					{ a.Replacement = 'SSReplacer_Nod'; break; }
				else if (dmr_replace_ss == 99)
					{ a.Replacement = 'SSReplacer_All'; break; }
			case 'CommanderKeen':
				// "Scythe 2"
				if (dmr_replace_keen == 1)
					{ a.Replacement = 'SuperAfrit'; break; }
				// "Epic 2"
				//else if(dmr_replace_keen == 2)
				//	{ a.Replacement = 'Epic2Keen'; break; }
				// "Resurgence"
				else if (dmr_replace_keen == 3)
					{ a.Replacement = 'SuperAfrit'; break; }
					
				// "DMR"
				else if (dmr_replace_keen == 11)
					{ a.Replacement = 'SuperAfrit'; break; }
					
			// mapset / mod custom actor replacers
			// if a mapset replaces WolfensteinSS and/or CommanderKeen, it should not be done here but above
			// BD Hell on Earth mapset
			case 'BossBelphegor'					: a.Replacement = 'Belphegor'; break;
			case 'CyberdemonLord'					: a.Replacement = 'Babel'; break;
			
			// Eviternity mapset
			case 'AstralCaco'						: a.Replacement = 'DMR_AstralCaco'; break;
			case 'Annihilator'						: a.Replacement = 'DMR_Annihilator'; break;
			case 'FormerCaptain'					: a.Replacement = 'DMR_FormerCaptain'; break;
			case 'NightmareDemon'					: a.Replacement = 'DMR_NightmareDemon'; break;			
			
			// Corruption Cards mod
			case 'CCards_Actor_PilotedMechPlasma'	: a.Replacement = 'DMR_ArachnotronPlasma'; break;
			case 'CCards_Actor_ShadowClone'			: a.Replacement = 'DMR_ShadowBanned'; break;
			case 'CCards_Actor_CardExplosiveBarrel'	: a.Replacement = 'DMR_ExplosiveBarrelCorruptionCards'; break;
		}		
		
		// hacky revert / overwrite of SWWM's teleporter replacer as in some instances this can cause massive lag when triggered rapidly
		// works under the impression that because this mod gets loaded after SWWM, this replacer will be used instead of SWWM's
		if (a.Replacee is 'TeleportFog' ) a.Replacement = 'DMR_TeleportFog';
	}
}

//======================================================================
//  Original credits
//======================================================================
//	ZScript: 	DustedPandemonic, modified by Dutchygamer
//======================================================================
class DMR_EffectHandler : EventHandler
{
	override void WorldThingSpawned(WorldEvent e)
	{
		// if fancy effects are disabled, nuke them when they spawn unless flagged as always display
		// this is a generic catch-all instead of having to do every time we spawn, thus eating up more CPU
		if (dmr_fancydoom == false && e.thing && e.thing is "DMR_FXBase" && DMR_FXBase(e.thing).bAlwaysDisplay == false)
		{
			e.thing.Destroy();
		}
	}
	
	//TODO doet weinig?
	// option to switch the fancy effects on / off with a console command
	override void NetworkProcess(ConsoleEvent e)
	{
		// if not the right command do nothing here
		if (e.name != "DMR_ClearEffects" || !e.isManual)
			return;
		
		// if fancy effects enabled, disable them
		if (dmr_fancydoom)
		{
			CVar.GetCVar("dmr_fancydoom").setint(0);
			Console.Printf("DMR: Fancy effects disabled");
		}
		// if fancy effects disabled, enable them
		else
		{
			CVar.GetCVar("dmr_fancydoom").setint(1);
			Console.Printf("DMR: Fancy effects enabled");
		}
	}
}

//TODO bij init zegt ie dat dit waar is, maar bij monster death zegt ie dat het false is?
// okay, als het geen STatic maar normale EventHandler is werkt het wel...
Class DMR_DemolitionistHandler : EventHandler //StaticEventHandler
{
	bool robuttDetected;

	override void OnRegister()
	{
		// setup the global variables
		let g = DMR_GlobalVariables.Get();
	
		// loop through all Actors
		foreach (cls : AllActorClasses)
		{
			// if we find the Demolitionist player, mark as being detected and then break out of the loop
			if ( cls.GetClassName() == "Demolitionist" )
			{
				robuttDetected = true;
			}
			if ( robuttDetected ) break;
		}
		
		// set the result into our global variables
		if (g && robuttDetected)
		{
			g.RobuttDetected = true;
			//Console.Printf("boopus marisa!" ..g.RobuttDetected);
		}
		
	}

	//override void WorldLoaded( WorldEvent e )
	//{
	//	// get rid of ourselves if not needed
	//	if ( !robuttDetected && !bDestroyed )
	//		Destroy();
	//}
}